{"/Users/danielyoo/project_team034/src/controller/IInsightFacade.ts":{"path":"/Users/danielyoo/project_team034/src/controller/IInsightFacade.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":113}},"2":{"start":{"line":5,"column":0},"end":{"line":8,"column":89}},"3":{"start":{"line":6,"column":4},"end":{"line":6,"column":48}},"4":{"start":{"line":7,"column":4},"end":{"line":7,"column":42}},"5":{"start":{"line":11,"column":8},"end":{"line":11,"column":23}},"6":{"start":{"line":12,"column":8},"end":{"line":12,"column":52}},"7":{"start":{"line":15,"column":0},"end":{"line":15,"column":36}},"8":{"start":{"line":18,"column":8},"end":{"line":18,"column":23}},"9":{"start":{"line":19,"column":8},"end":{"line":19,"column":53}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":38}},"11":{"start":{"line":25,"column":8},"end":{"line":25,"column":23}},"12":{"start":{"line":26,"column":8},"end":{"line":26,"column":59}},"13":{"start":{"line":29,"column":0},"end":{"line":29,"column":50}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":1},"end":{"line":5,"column":2}},"loc":{"start":{"line":5,"column":31},"end":{"line":8,"column":1}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":4},"end":{"line":10,"column":5}},"loc":{"start":{"line":10,"column":25},"end":{"line":13,"column":5}},"line":10},"2":{"name":"(anonymous_2)","decl":{"start":{"line":17,"column":4},"end":{"line":17,"column":5}},"loc":{"start":{"line":17,"column":25},"end":{"line":20,"column":5}},"line":17},"3":{"name":"(anonymous_3)","decl":{"start":{"line":24,"column":4},"end":{"line":24,"column":5}},"loc":{"start":{"line":24,"column":25},"end":{"line":27,"column":5}},"line":24}},"branchMap":{"0":{"loc":{"start":{"line":8,"column":24},"end":{"line":8,"column":87}},"type":"binary-expr","locations":[{"start":{"line":8,"column":24},"end":{"line":8,"column":50}},{"start":{"line":8,"column":55},"end":{"line":8,"column":86}}],"line":8}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":61,"6":61,"7":1,"8":2,"9":2,"10":1,"11":2,"12":2,"13":1},"f":{"0":1,"1":61,"2":2,"3":2},"b":{"0":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/danielyoo/project_team034/src/controller/IInsightFacade.ts","sources":["/Users/danielyoo/project_team034/src/controller/IInsightFacade.ts"],"names":[],"mappings":";;;AAMA,IAAY,kBAGX;AAHD,WAAY,kBAAkB;IAC7B,2CAAqB,CAAA;IACrB,qCAAe,CAAA;AAChB,CAAC,EAHW,kBAAkB,GAAlB,0BAAkB,KAAlB,0BAAkB,QAG7B;AAUD,MAAa,YAAa,SAAQ,KAAK;IACtC,YAAY,OAAgB;QAC3B,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;IAC7C,CAAC;CACD;AALD,oCAKC;AAED,MAAa,aAAc,SAAQ,KAAK;IACvC,YAAY,OAAgB;QAC3B,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC;IAC9C,CAAC;CACD;AALD,sCAKC;AAED,MAAa,mBAAoB,SAAQ,KAAK;IAC7C,YAAY,OAAgB;QAC3B,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,mBAAmB,CAAC,CAAC;IACpD,CAAC;CACD;AALD,kDAKC","sourcesContent":["/*\n * This is the primary high-level API for the project. In this folder there should be:\n * A class called InsightFacade, this should be in a file called InsightFacade.ts.\n * You should not change this interface at all or the test suite will not work.\n */\n\nexport enum InsightDatasetKind {\n\tSections = \"sections\",\n\tRooms = \"rooms\",\n}\n\nexport interface InsightDataset {\n\tid: string;\n\tkind: InsightDatasetKind;\n\tnumRows: number;\n}\n\nexport type InsightResult = Record<string, string | number>;\n\nexport class InsightError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper(message);\n\t\tError.captureStackTrace(this, InsightError);\n\t}\n}\n\nexport class NotFoundError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper(message);\n\t\tError.captureStackTrace(this, NotFoundError);\n\t}\n}\n\nexport class ResultTooLargeError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper(message);\n\t\tError.captureStackTrace(this, ResultTooLargeError);\n\t}\n}\n\nexport interface IInsightFacade {\n\t/**\n\t * Add a dataset to insightUBC.\n\t *\n\t * @param id  The id of the dataset being added. Follows the format /^[^_]+$/\n\t * @param content  The base64 content of the dataset. This content should be in the form of a serialized zip file.\n\t * @param kind  The kind of the dataset\n\t *\n\t * @return Promise <string[]>\n\t *\n\t * The promise should fulfill on a successful add, reject for any failures.\n\t * The promise should fulfill with a string array,\n\t * containing the ids of all currently added datasets upon a successful add.\n\t * The promise should reject with an InsightError describing the error.\n\t *\n\t * An id is invalid if it contains an underscore, or is only whitespace characters.\n\t * If id is the same as the id of an already added dataset, the dataset should be rejected and not saved.\n\t *\n\t * After receiving the dataset, it should be processed into a data structure of\n\t * your design. The processed data structure should be persisted to disk; your\n\t * system should be able to load this persisted value into memory for answering\n\t * queries.\n\t *\n\t * Ultimately, a dataset must be added or loaded from disk before queries can\n\t * be successfully answered.\n\t */\n\taddDataset(id: string, content: string, kind: InsightDatasetKind): Promise<string[]>;\n\n\t/**\n\t * Remove a dataset from insightUBC.\n\t *\n\t * @param id  The id of the dataset to remove. Follows the format /^[^_]+$/\n\t *\n\t * @return Promise <string>\n\t *\n\t * The promise should fulfill upon a successful removal, reject on any error.\n\t * Attempting to remove a dataset that hasn't been added yet counts as an error.\n\t *\n\t * An id is invalid if it contains an underscore, or is only whitespace characters.\n\t *\n\t * The promise should fulfill the id of the dataset that was removed.\n\t * The promise should reject with a NotFoundError (if a valid id was not yet added)\n\t * or an InsightError (invalid id or any other source of failure) describing the error.\n\t *\n\t * This will delete both disk and memory caches for the dataset for the id meaning\n\t * that subsequent queries for that id should fail unless a new addDataset happens first.\n\t */\n\tremoveDataset(id: string): Promise<string>;\n\n\t/**\n\t * Perform a query on insightUBC.\n\t *\n\t * @param query  The query to be performed.\n\t *\n\t * If a query is incorrectly formatted, references a dataset not added (in memory or on disk),\n\t * or references multiple datasets, it should be rejected.\n\t *\n\t * @return Promise <InsightResult[]>\n\t *\n\t * The promise should fulfill with an array of results.\n\t * The promise should reject with a ResultTooLargeError (if the query returns too many results)\n\t * or an InsightError (for any other source of failure) describing the error.\n\t */\n\tperformQuery(query: unknown): Promise<InsightResult[]>;\n\n\t/**\n\t * List all currently added datasets, their types, and number of rows.\n\t *\n\t * @return Promise <InsightDataset[]>\n\t * The promise should fulfill an array of currently added InsightDatasets, and will only fulfill.\n\t */\n\tlistDatasets(): Promise<InsightDataset[]>;\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"a07c23ec9841ba6f20a0416ba196875eb4b97340","contentHash":"0becfed9516c71a70ddb58f6108697e94cf45435743c84b078a2fee39fdc4908"},"/Users/danielyoo/project_team034/src/controller/InsightFacade.ts":{"path":"/Users/danielyoo/project_team034/src/controller/InsightFacade.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"2":{"start":{"line":3,"column":26},"end":{"line":3,"column":33}},"3":{"start":{"line":4,"column":15},"end":{"line":4,"column":52}},"4":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"5":{"start":{"line":6,"column":6},"end":{"line":6,"column":68}},"6":{"start":{"line":6,"column":51},"end":{"line":6,"column":63}},"7":{"start":{"line":8,"column":4},"end":{"line":8,"column":39}},"8":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"9":{"start":{"line":10,"column":26},"end":{"line":10,"column":33}},"10":{"start":{"line":11,"column":4},"end":{"line":11,"column":17}},"11":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"12":{"start":{"line":14,"column":4},"end":{"line":14,"column":72}},"13":{"start":{"line":16,"column":4},"end":{"line":16,"column":21}},"14":{"start":{"line":18,"column":19},"end":{"line":24,"column":1}},"15":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"16":{"start":{"line":19,"column":31},"end":{"line":19,"column":42}},"17":{"start":{"line":20,"column":17},"end":{"line":20,"column":19}},"18":{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},"19":{"start":{"line":21,"column":21},"end":{"line":21,"column":141}},"20":{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},"21":{"start":{"line":21,"column":109},"end":{"line":21,"column":141}},"22":{"start":{"line":22,"column":4},"end":{"line":22,"column":36}},"23":{"start":{"line":23,"column":4},"end":{"line":23,"column":18}},"24":{"start":{"line":25,"column":0},"end":{"line":25,"column":62}},"25":{"start":{"line":26,"column":25},"end":{"line":26,"column":52}},"26":{"start":{"line":27,"column":11},"end":{"line":27,"column":44}},"27":{"start":{"line":28,"column":18},"end":{"line":28,"column":38}},"28":{"start":{"line":29,"column":20},"end":{"line":29,"column":42}},"29":{"start":{"line":30,"column":19},"end":{"line":30,"column":40}},"30":{"start":{"line":32,"column":21},"end":{"line":32,"column":57}},"31":{"start":{"line":33,"column":17},"end":{"line":33,"column":70}},"32":{"start":{"line":34,"column":20},"end":{"line":34,"column":36}},"33":{"start":{"line":35,"column":4},"end":{"line":35,"column":29}},"34":{"start":{"line":36,"column":26},"end":{"line":36,"column":33}},"35":{"start":{"line":37,"column":21},"end":{"line":37,"column":43}},"36":{"start":{"line":38,"column":4},"end":{"line":47,"column":5}},"37":{"start":{"line":39,"column":8},"end":{"line":46,"column":11}},"38":{"start":{"line":40,"column":27},"end":{"line":40,"column":35}},"39":{"start":{"line":41,"column":27},"end":{"line":41,"column":35}},"40":{"start":{"line":42,"column":12},"end":{"line":44,"column":13}},"41":{"start":{"line":43,"column":16},"end":{"line":43,"column":39}},"42":{"start":{"line":45,"column":12},"end":{"line":45,"column":80}},"43":{"start":{"line":48,"column":4},"end":{"line":48,"column":20}},"44":{"start":{"line":51,"column":4},"end":{"line":53,"column":5}},"45":{"start":{"line":52,"column":8},"end":{"line":52,"column":84}},"46":{"start":{"line":54,"column":4},"end":{"line":56,"column":5}},"47":{"start":{"line":55,"column":8},"end":{"line":55,"column":90}},"48":{"start":{"line":57,"column":4},"end":{"line":59,"column":5}},"49":{"start":{"line":58,"column":8},"end":{"line":58,"column":85}},"50":{"start":{"line":62,"column":22},"end":{"line":62,"column":24}},"51":{"start":{"line":63,"column":4},"end":{"line":65,"column":7}},"52":{"start":{"line":64,"column":8},"end":{"line":64,"column":56}},"53":{"start":{"line":66,"column":4},"end":{"line":66,"column":21}},"54":{"start":{"line":69,"column":27},"end":{"line":69,"column":42}},"55":{"start":{"line":70,"column":4},"end":{"line":70,"column":48}},"56":{"start":{"line":74,"column":8},"end":{"line":74,"column":43}},"57":{"start":{"line":75,"column":8},"end":{"line":77,"column":9}},"58":{"start":{"line":76,"column":12},"end":{"line":76,"column":40}},"59":{"start":{"line":78,"column":8},"end":{"line":80,"column":9}},"60":{"start":{"line":79,"column":12},"end":{"line":79,"column":48}},"61":{"start":{"line":81,"column":8},"end":{"line":83,"column":9}},"62":{"start":{"line":82,"column":12},"end":{"line":82,"column":53}},"63":{"start":{"line":84,"column":8},"end":{"line":84,"column":20}},"64":{"start":{"line":87,"column":8},"end":{"line":113,"column":9}},"65":{"start":{"line":88,"column":12},"end":{"line":88,"column":29}},"66":{"start":{"line":89,"column":24},"end":{"line":89,"column":54}},"67":{"start":{"line":90,"column":12},"end":{"line":92,"column":13}},"68":{"start":{"line":91,"column":16},"end":{"line":91,"column":77}},"69":{"start":{"line":93,"column":12},"end":{"line":95,"column":13}},"70":{"start":{"line":94,"column":16},"end":{"line":94,"column":88}},"71":{"start":{"line":96,"column":44},"end":{"line":96,"column":91}},"72":{"start":{"line":97,"column":27},"end":{"line":97,"column":39}},"73":{"start":{"line":98,"column":12},"end":{"line":98,"column":66}},"74":{"start":{"line":99,"column":29},"end":{"line":99,"column":46}},"75":{"start":{"line":100,"column":12},"end":{"line":100,"column":74}},"76":{"start":{"line":101,"column":28},"end":{"line":105,"column":13}},"77":{"start":{"line":106,"column":12},"end":{"line":106,"column":55}},"78":{"start":{"line":109,"column":12},"end":{"line":111,"column":13}},"79":{"start":{"line":110,"column":16},"end":{"line":110,"column":26}},"80":{"start":{"line":112,"column":12},"end":{"line":112,"column":97}},"81":{"start":{"line":114,"column":25},"end":{"line":114,"column":61}},"82":{"start":{"line":115,"column":23},"end":{"line":115,"column":25}},"83":{"start":{"line":116,"column":8},"end":{"line":118,"column":9}},"84":{"start":{"line":117,"column":12},"end":{"line":117,"column":33}},"85":{"start":{"line":119,"column":8},"end":{"line":119,"column":22}},"86":{"start":{"line":122,"column":8},"end":{"line":138,"column":9}},"87":{"start":{"line":123,"column":12},"end":{"line":123,"column":29}},"88":{"start":{"line":124,"column":24},"end":{"line":124,"column":54}},"89":{"start":{"line":125,"column":12},"end":{"line":127,"column":13}},"90":{"start":{"line":126,"column":16},"end":{"line":126,"column":73}},"91":{"start":{"line":128,"column":12},"end":{"line":128,"column":47}},"92":{"start":{"line":129,"column":12},"end":{"line":129,"column":53}},"93":{"start":{"line":132,"column":12},"end":{"line":137,"column":13}},"94":{"start":{"line":133,"column":16},"end":{"line":133,"column":26}},"95":{"start":{"line":136,"column":16},"end":{"line":136,"column":104}},"96":{"start":{"line":139,"column":8},"end":{"line":139,"column":18}},"97":{"start":{"line":142,"column":8},"end":{"line":142,"column":46}},"98":{"start":{"line":143,"column":22},"end":{"line":143,"column":27}},"99":{"start":{"line":144,"column":23},"end":{"line":144,"column":25}},"100":{"start":{"line":145,"column":24},"end":{"line":145,"column":68}},"101":{"start":{"line":146,"column":22},"end":{"line":146,"column":35}},"102":{"start":{"line":147,"column":24},"end":{"line":147,"column":39}},"103":{"start":{"line":148,"column":21},"end":{"line":148,"column":60}},"104":{"start":{"line":148,"column":42},"end":{"line":148,"column":59}},"105":{"start":{"line":149,"column":26},"end":{"line":149,"column":43}},"106":{"start":{"line":150,"column":25},"end":{"line":150,"column":60}},"107":{"start":{"line":151,"column":8},"end":{"line":156,"column":9}},"108":{"start":{"line":152,"column":12},"end":{"line":154,"column":15}},"109":{"start":{"line":153,"column":16},"end":{"line":153,"column":69}},"110":{"start":{"line":155,"column":12},"end":{"line":155,"column":26}},"111":{"start":{"line":157,"column":22},"end":{"line":157,"column":33}},"112":{"start":{"line":158,"column":8},"end":{"line":162,"column":11}},"113":{"start":{"line":159,"column":12},"end":{"line":161,"column":13}},"114":{"start":{"line":160,"column":16},"end":{"line":160,"column":69}},"115":{"start":{"line":163,"column":20},"end":{"line":163,"column":24}},"116":{"start":{"line":164,"column":8},"end":{"line":166,"column":9}},"117":{"start":{"line":165,"column":12},"end":{"line":165,"column":90}},"118":{"start":{"line":167,"column":8},"end":{"line":167,"column":22}},"119":{"start":{"line":170,"column":8},"end":{"line":170,"column":46}},"120":{"start":{"line":173,"column":0},"end":{"line":173,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":74},"end":{"line":2,"column":75}},"loc":{"start":{"line":2,"column":96},"end":{"line":9,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":6,"column":38},"end":{"line":6,"column":39}},"loc":{"start":{"line":6,"column":49},"end":{"line":6,"column":65}},"line":6},"2":{"name":"(anonymous_2)","decl":{"start":{"line":9,"column":6},"end":{"line":9,"column":7}},"loc":{"start":{"line":9,"column":28},"end":{"line":12,"column":1}},"line":9},"3":{"name":"(anonymous_3)","decl":{"start":{"line":13,"column":80},"end":{"line":13,"column":81}},"loc":{"start":{"line":13,"column":95},"end":{"line":15,"column":1}},"line":13},"4":{"name":"(anonymous_4)","decl":{"start":{"line":15,"column":5},"end":{"line":15,"column":6}},"loc":{"start":{"line":15,"column":20},"end":{"line":17,"column":1}},"line":15},"5":{"name":"(anonymous_5)","decl":{"start":{"line":18,"column":50},"end":{"line":18,"column":51}},"loc":{"start":{"line":18,"column":65},"end":{"line":24,"column":1}},"line":18},"6":{"name":"loadDataset","decl":{"start":{"line":31,"column":15},"end":{"line":31,"column":26}},"loc":{"start":{"line":31,"column":45},"end":{"line":49,"column":1}},"line":31},"7":{"name":"(anonymous_7)","decl":{"start":{"line":39,"column":22},"end":{"line":39,"column":23}},"loc":{"start":{"line":39,"column":32},"end":{"line":46,"column":9}},"line":39},"8":{"name":"validateDataset","decl":{"start":{"line":50,"column":9},"end":{"line":50,"column":24}},"loc":{"start":{"line":50,"column":34},"end":{"line":60,"column":1}},"line":50},"9":{"name":"makeAttribute","decl":{"start":{"line":61,"column":9},"end":{"line":61,"column":22}},"loc":{"start":{"line":61,"column":49},"end":{"line":67,"column":1}},"line":61},"10":{"name":"(anonymous_10)","decl":{"start":{"line":63,"column":17},"end":{"line":63,"column":18}},"loc":{"start":{"line":63,"column":26},"end":{"line":65,"column":5}},"line":63},"11":{"name":"removeForbiddenCharacters","decl":{"start":{"line":68,"column":9},"end":{"line":68,"column":34}},"loc":{"start":{"line":68,"column":45},"end":{"line":71,"column":1}},"line":68},"12":{"name":"(anonymous_12)","decl":{"start":{"line":73,"column":4},"end":{"line":73,"column":5}},"loc":{"start":{"line":73,"column":16},"end":{"line":85,"column":5}},"line":73},"13":{"name":"(anonymous_13)","decl":{"start":{"line":86,"column":4},"end":{"line":86,"column":5}},"loc":{"start":{"line":86,"column":40},"end":{"line":120,"column":5}},"line":86},"14":{"name":"(anonymous_14)","decl":{"start":{"line":121,"column":4},"end":{"line":121,"column":5}},"loc":{"start":{"line":121,"column":28},"end":{"line":140,"column":5}},"line":121},"15":{"name":"(anonymous_15)","decl":{"start":{"line":141,"column":4},"end":{"line":141,"column":5}},"loc":{"start":{"line":141,"column":30},"end":{"line":168,"column":5}},"line":141},"16":{"name":"(anonymous_16)","decl":{"start":{"line":148,"column":33},"end":{"line":148,"column":34}},"loc":{"start":{"line":148,"column":42},"end":{"line":148,"column":59}},"line":148},"17":{"name":"(anonymous_17)","decl":{"start":{"line":152,"column":29},"end":{"line":152,"column":30}},"loc":{"start":{"line":152,"column":42},"end":{"line":154,"column":13}},"line":152},"18":{"name":"(anonymous_18)","decl":{"start":{"line":158,"column":25},"end":{"line":158,"column":26}},"loc":{"start":{"line":158,"column":38},"end":{"line":162,"column":9}},"line":158},"19":{"name":"(anonymous_19)","decl":{"start":{"line":169,"column":4},"end":{"line":169,"column":5}},"loc":{"start":{"line":169,"column":25},"end":{"line":171,"column":5}},"line":169}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":57},"end":{"line":12,"column":2}}],"line":2},"1":{"loc":{"start":{"line":2,"column":57},"end":{"line":12,"column":2}},"type":"cond-expr","locations":[{"start":{"line":2,"column":74},"end":{"line":9,"column":1}},{"start":{"line":9,"column":6},"end":{"line":12,"column":1}}],"line":2},"2":{"loc":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"type":"if","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},{"start":{"line":3,"column":4},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"type":"if","locations":[{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},{"start":{"line":5,"column":4},"end":{"line":7,"column":5}}],"line":5},"4":{"loc":{"start":{"line":5,"column":8},"end":{"line":5,"column":85}},"type":"binary-expr","locations":[{"start":{"line":5,"column":8},"end":{"line":5,"column":13}},{"start":{"line":5,"column":18},"end":{"line":5,"column":84}}],"line":5},"5":{"loc":{"start":{"line":5,"column":18},"end":{"line":5,"column":84}},"type":"cond-expr","locations":[{"start":{"line":5,"column":34},"end":{"line":5,"column":47}},{"start":{"line":5,"column":50},"end":{"line":5,"column":84}}],"line":5},"6":{"loc":{"start":{"line":5,"column":50},"end":{"line":5,"column":84}},"type":"binary-expr","locations":[{"start":{"line":5,"column":50},"end":{"line":5,"column":63}},{"start":{"line":5,"column":67},"end":{"line":5,"column":84}}],"line":5},"7":{"loc":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},{"start":{"line":10,"column":4},"end":{"line":10,"column":33}}],"line":10},"8":{"loc":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"type":"binary-expr","locations":[{"start":{"line":13,"column":26},"end":{"line":13,"column":30}},{"start":{"line":13,"column":34},"end":{"line":13,"column":57}},{"start":{"line":13,"column":63},"end":{"line":17,"column":1}}],"line":13},"9":{"loc":{"start":{"line":13,"column":63},"end":{"line":17,"column":1}},"type":"cond-expr","locations":[{"start":{"line":13,"column":80},"end":{"line":15,"column":1}},{"start":{"line":15,"column":5},"end":{"line":17,"column":1}}],"line":13},"10":{"loc":{"start":{"line":18,"column":19},"end":{"line":24,"column":1}},"type":"binary-expr","locations":[{"start":{"line":18,"column":20},"end":{"line":18,"column":24}},{"start":{"line":18,"column":28},"end":{"line":18,"column":45}},{"start":{"line":18,"column":50},"end":{"line":24,"column":1}}],"line":18},"11":{"loc":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"type":"if","locations":[{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},{"start":{"line":19,"column":4},"end":{"line":19,"column":42}}],"line":19},"12":{"loc":{"start":{"line":19,"column":8},"end":{"line":19,"column":29}},"type":"binary-expr","locations":[{"start":{"line":19,"column":8},"end":{"line":19,"column":11}},{"start":{"line":19,"column":15},"end":{"line":19,"column":29}}],"line":19},"13":{"loc":{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},"type":"if","locations":[{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},{"start":{"line":21,"column":4},"end":{"line":21,"column":141}}],"line":21},"14":{"loc":{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},"type":"if","locations":[{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},{"start":{"line":21,"column":40},"end":{"line":21,"column":141}}],"line":21},"15":{"loc":{"start":{"line":21,"column":44},"end":{"line":21,"column":107}},"type":"binary-expr","locations":[{"start":{"line":21,"column":44},"end":{"line":21,"column":59}},{"start":{"line":21,"column":63},"end":{"line":21,"column":107}}],"line":21},"16":{"loc":{"start":{"line":38,"column":4},"end":{"line":47,"column":5}},"type":"if","locations":[{"start":{"line":38,"column":4},"end":{"line":47,"column":5}},{"start":{"line":38,"column":4},"end":{"line":47,"column":5}}],"line":38},"17":{"loc":{"start":{"line":42,"column":12},"end":{"line":44,"column":13}},"type":"if","locations":[{"start":{"line":42,"column":12},"end":{"line":44,"column":13}},{"start":{"line":42,"column":12},"end":{"line":44,"column":13}}],"line":42},"18":{"loc":{"start":{"line":42,"column":16},"end":{"line":42,"column":72}},"type":"binary-expr","locations":[{"start":{"line":42,"column":16},"end":{"line":42,"column":42}},{"start":{"line":42,"column":46},"end":{"line":42,"column":72}}],"line":42},"19":{"loc":{"start":{"line":51,"column":4},"end":{"line":53,"column":5}},"type":"if","locations":[{"start":{"line":51,"column":4},"end":{"line":53,"column":5}},{"start":{"line":51,"column":4},"end":{"line":53,"column":5}}],"line":51},"20":{"loc":{"start":{"line":54,"column":4},"end":{"line":56,"column":5}},"type":"if","locations":[{"start":{"line":54,"column":4},"end":{"line":56,"column":5}},{"start":{"line":54,"column":4},"end":{"line":56,"column":5}}],"line":54},"21":{"loc":{"start":{"line":57,"column":4},"end":{"line":59,"column":5}},"type":"if","locations":[{"start":{"line":57,"column":4},"end":{"line":59,"column":5}},{"start":{"line":57,"column":4},"end":{"line":59,"column":5}}],"line":57},"22":{"loc":{"start":{"line":75,"column":8},"end":{"line":77,"column":9}},"type":"if","locations":[{"start":{"line":75,"column":8},"end":{"line":77,"column":9}},{"start":{"line":75,"column":8},"end":{"line":77,"column":9}}],"line":75},"23":{"loc":{"start":{"line":78,"column":8},"end":{"line":80,"column":9}},"type":"if","locations":[{"start":{"line":78,"column":8},"end":{"line":80,"column":9}},{"start":{"line":78,"column":8},"end":{"line":80,"column":9}}],"line":78},"24":{"loc":{"start":{"line":81,"column":8},"end":{"line":83,"column":9}},"type":"if","locations":[{"start":{"line":81,"column":8},"end":{"line":83,"column":9}},{"start":{"line":81,"column":8},"end":{"line":83,"column":9}}],"line":81},"25":{"loc":{"start":{"line":90,"column":12},"end":{"line":92,"column":13}},"type":"if","locations":[{"start":{"line":90,"column":12},"end":{"line":92,"column":13}},{"start":{"line":90,"column":12},"end":{"line":92,"column":13}}],"line":90},"26":{"loc":{"start":{"line":93,"column":12},"end":{"line":95,"column":13}},"type":"if","locations":[{"start":{"line":93,"column":12},"end":{"line":95,"column":13}},{"start":{"line":93,"column":12},"end":{"line":95,"column":13}}],"line":93},"27":{"loc":{"start":{"line":109,"column":12},"end":{"line":111,"column":13}},"type":"if","locations":[{"start":{"line":109,"column":12},"end":{"line":111,"column":13}},{"start":{"line":109,"column":12},"end":{"line":111,"column":13}}],"line":109},"28":{"loc":{"start":{"line":125,"column":12},"end":{"line":127,"column":13}},"type":"if","locations":[{"start":{"line":125,"column":12},"end":{"line":127,"column":13}},{"start":{"line":125,"column":12},"end":{"line":127,"column":13}}],"line":125},"29":{"loc":{"start":{"line":132,"column":12},"end":{"line":137,"column":13}},"type":"if","locations":[{"start":{"line":132,"column":12},"end":{"line":137,"column":13}},{"start":{"line":132,"column":12},"end":{"line":137,"column":13}}],"line":132},"30":{"loc":{"start":{"line":151,"column":8},"end":{"line":156,"column":9}},"type":"if","locations":[{"start":{"line":151,"column":8},"end":{"line":156,"column":9}},{"start":{"line":151,"column":8},"end":{"line":156,"column":9}}],"line":151},"31":{"loc":{"start":{"line":159,"column":12},"end":{"line":161,"column":13}},"type":"if","locations":[{"start":{"line":159,"column":12},"end":{"line":161,"column":13}},{"start":{"line":159,"column":12},"end":{"line":161,"column":13}}],"line":159},"32":{"loc":{"start":{"line":164,"column":8},"end":{"line":166,"column":9}},"type":"if","locations":[{"start":{"line":164,"column":8},"end":{"line":166,"column":9}},{"start":{"line":164,"column":8},"end":{"line":166,"column":9}}],"line":164}},"s":{"0":1,"1":148,"2":148,"3":148,"4":148,"5":148,"6":114,"7":148,"8":0,"9":0,"10":0,"11":1,"12":1,"13":0,"14":1,"15":1,"16":0,"17":1,"18":1,"19":1,"20":148,"21":148,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":35,"31":35,"32":35,"33":35,"34":35,"35":35,"36":35,"37":2,"38":1787726,"39":1787726,"40":1787726,"41":1787726,"42":0,"43":35,"44":35,"45":0,"46":35,"47":0,"48":35,"49":0,"50":31185,"51":31185,"52":83745,"53":31185,"54":112,"55":112,"56":77,"57":77,"58":2,"59":75,"60":9,"61":66,"62":2,"63":64,"64":58,"65":58,"66":49,"67":49,"68":4,"69":45,"70":1,"71":44,"72":33,"73":33,"74":33,"75":33,"76":33,"77":33,"78":25,"79":5,"80":20,"81":33,"82":33,"83":33,"84":60,"85":33,"86":19,"87":19,"88":15,"89":15,"90":2,"91":13,"92":13,"93":6,"94":2,"95":4,"96":13,"97":42,"98":36,"99":36,"100":36,"101":35,"102":35,"103":35,"104":76,"105":35,"106":35,"107":35,"108":1,"109":2,"110":1,"111":34,"112":34,"113":516967,"114":31183,"115":9,"116":9,"117":2,"118":7,"119":10,"120":1},"f":{"0":148,"1":114,"2":0,"3":1,"4":0,"5":1,"6":35,"7":1787726,"8":35,"9":31185,"10":83745,"11":112,"12":77,"13":58,"14":19,"15":42,"16":76,"17":2,"18":516967,"19":10},"b":{"0":[1,1,1],"1":[1,0],"2":[148,0],"3":[148,0],"4":[148,148],"5":[0,148],"6":[148,0],"7":[0,0],"8":[1,1,1],"9":[1,0],"10":[1,1,1],"11":[0,1],"12":[1,1],"13":[1,0],"14":[148,0],"15":[148,148],"16":[2,33],"17":[1787726,0],"18":[1787726,1787726],"19":[0,35],"20":[0,35],"21":[0,35],"22":[2,75],"23":[9,66],"24":[2,64],"25":[4,45],"26":[1,44],"27":[5,20],"28":[2,13],"29":[2,4],"30":[1,34],"31":[31183,485759],"32":[2,7]},"inputSourceMap":{"version":3,"file":"/Users/danielyoo/project_team034/src/controller/InsightFacade.ts","sources":["/Users/danielyoo/project_team034/src/controller/InsightFacade.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n\tIInsightFacade,\n\tInsightError,\n\tNotFoundError,\n\tInsightDataset,\n\tInsightDatasetKind,\n\tInsightResult,\n\tResultTooLargeError,\n} from \"./IInsightFacade\";\nimport * as fs from \"fs-extra\";\nimport { processZipContent } from \"./ZipUtil\";\nimport { validateQuery, matchQuery, parseOptions } from \"./QueryUtil\";\nimport { addMetadata, readMetadata, removeMetadata, getIds } from \"./MetaUtil\";\n\n/**\n * This is the main programmatic entry point for the project.\n * Method documentation is in IInsightFacade\n *\n */\n\n// changing something\n\nexport interface Section {\n\tuuid: string;\n\tid: string;\n\ttitle: string;\n\tinstructor: string;\n\tdept: string;\n\tyear: number;\n\tavg: number;\n\tpass: number;\n\tfail: number;\n\taudit: number;\n}\n\nexport interface Query {\n\tWHERE: object;\n\n\tOPTIONS: {\n\t\tCOLUMNS: string[];\n\t\tORDER?: string;\n\t};\n}\n\nexport type Where = Record<string, any>;\n\n/**\n * Reads and validates a given dataset.\n *\n * @param datasetID containing the dataset id\n * @throws Error if JSON file is not a valid dataset.\n */\nasync function loadDataset(datasetID: string, order: string): Promise<Section[]> {\n\tconst filename = removeForbiddenCharacters(datasetID);\n\tconst data = await fs.readFile(`./data/${filename}.json`, \"utf-8\");\n\tconst dataset: unknown = JSON.parse(data);\n\tvalidateDataset(dataset);\n\tconst datasetObject = dataset as { sections: Section[] };\n\n\tconst sections = datasetObject.sections;\n\n\tif (order !== \"\") {\n\t\tsections.sort((a: Section, b: Section) => {\n\t\t\tconst fieldA = a[order as keyof Section];\n\t\t\tconst fieldB = b[order as keyof Section];\n\n\t\t\tif (typeof fieldA === \"number\" && typeof fieldB === \"number\") {\n\t\t\t\treturn fieldA - fieldB;\n\t\t\t}\n\n\t\t\tthrow new InsightError(\"order must be an mfield!\");\n\t\t});\n\t}\n\n\treturn sections;\n}\n\nfunction validateDataset(dataset: any): asserts dataset is object {\n\tif (Array.isArray(dataset)) {\n\t\tthrow new Error(\"ValidationError: dataset must be an object not an array.\");\n\t}\n\tif (!Object.hasOwn(dataset, \"sections\")) {\n\t\tthrow new Error(\"ValidationError: dataset is missing required field 'sections'.\");\n\t}\n\tif (!Array.isArray(dataset.sections)) {\n\t\tthrow new Error(\"ValidationError: sections under dataset must be an array.\");\n\t}\n}\n\nfunction makeAttribute(datasetID: string, keys: string[], section: Section): InsightResult {\n\tconst attribute: InsightResult = {};\n\n\tkeys.forEach((key) => {\n\t\tattribute[datasetID + \"_\" + key] = section[key as keyof Section];\n\t});\n\n\treturn attribute;\n}\n\n// Removes all forbidden characters for a filename from the string\nfunction removeForbiddenCharacters(filename: string): string {\n\t// Define forbidden characters\n\tconst forbiddenChars = /[\\\\/:*?\"<>|]/g;\n\n\t// Replace all forbidden characters with an empty string\n\treturn filename.replace(forbiddenChars, \"\");\n}\n\nexport default class InsightFacade implements IInsightFacade {\n\tpublic checkId(id: string): boolean {\n\t\t// id validity checks\n\t\tid = removeForbiddenCharacters(id);\n\t\tif (id.length === 0) {\n\t\t\tthrow new Error(\"empty id\");\n\t\t}\n\t\tif (id.includes(\"_\")) {\n\t\t\tthrow new Error(\"underscore in id\");\n\t\t}\n\t\tif (/^\\s*$/.test(id)) {\n\t\t\tthrow new Error(\"only whitespace in id\");\n\t\t}\n\t\treturn true;\n\t}\n\n\t// public isBase64(str: string): boolean {\n\t// \tif (str === \"\" || str.trim() === \"\") {\n\t// \t\treturn false;\n\t// \t}\n\t// \t// Check if the string only contains valid base64 characters\n\t// \treturn /^[A-Za-z0-9+/]*={0,2}$/.test(str) && btoa(atob(str)) === str;\n\t// }\n\n\tpublic async addDataset(id: string, content: string, kind: InsightDatasetKind): Promise<string[]> {\n\t\ttry {\n\t\t\tthis.checkId(id);\n\t\t\tconst ids = await getIds();\n\t\t\tif (ids.includes(id)) {\n\t\t\t\tthrow new InsightError(\"Id already exists\");\n\t\t\t}\n\n\t\t\tif (kind === \"rooms\") {\n\t\t\t\tthrow new InsightError(\"Incorrect InsightDatasetKind\");\n\t\t\t}\n\n\t\t\tconst { sections, totalRows } = await processZipContent(content);\n\n\t\t\tconst output = { sections };\n\n\t\t\tawait fs.promises.mkdir(\"data/\", { recursive: true });\n\t\t\tconst filePath = `data/${id}.json`;\n\t\t\tawait fs.promises.writeFile(filePath, JSON.stringify(output));\n\n\t\t\tconst dataset: InsightDataset = {\n\t\t\t\tid: id,\n\t\t\t\tkind: kind,\n\t\t\t\tnumRows: totalRows,\n\t\t\t};\n\n\t\t\tawait addMetadata(dataset);\n\t\t} catch (err) {\n\t\t\tif (err instanceof InsightError) {\n\t\t\t\tthrow err;\n\t\t\t}\n\t\t\tthrow new InsightError(`addDataset threw unexpected error: ${err}`);\n\t\t}\n\t\tconst metaData = await readMetadata();\n\t\tconst result: string[] = [];\n\n\t\tfor (const data of metaData) {\n\t\t\tresult.push(data.id);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tpublic async removeDataset(id: string): Promise<string> {\n\t\ttry {\n\t\t\t// id validity checks\n\t\t\tthis.checkId(id);\n\n\t\t\tconst ids = await getIds();\n\n\t\t\tif (!ids.includes(id)) {\n\t\t\t\tthrow new NotFoundError(\"id not found\");\n\t\t\t}\n\n\t\t\tawait fs.remove(`data/${id}.json`);\n\t\t\tawait removeMetadata(id);\n\t\t} catch (err) {\n\t\t\tif (err instanceof NotFoundError) {\n\t\t\t\tthrow err;\n\t\t\t} else {\n\t\t\t\tthrow new InsightError(`removeDataset threw unexpected error: ${err}`);\n\t\t\t}\n\t\t}\n\n\t\treturn id;\n\t}\n\n\tpublic async performQuery(query: unknown): Promise<InsightResult[]> {\n\t\t// validate query, throw InsightError if query is not valid\n\t\tvalidateQuery(query);\n\n\t\tconst input: Query = query as Query;\n\n\t\tconst result: InsightResult[] = [];\n\n\t\tconst options = parseOptions(input.OPTIONS);\n\t\tconst order = options.order;\n\t\tconst columns = options.columns;\n\t\tconst keys: string[] = columns.map((col: string) => col.split(\"_\")[1]);\n\t\tconst datasetID = options.datasetID;\n\n\t\tconst sections: Section[] = await loadDataset(datasetID, order);\n\n\t\t// base case when WHERE is empty\n\t\tif (Object.keys(input.WHERE).length === 0) {\n\t\t\tsections.forEach((section) => {\n\t\t\t\tresult.push(makeAttribute(datasetID, keys, section));\n\t\t\t});\n\t\t\treturn result;\n\t\t}\n\n\t\tconst where: Where = input.WHERE as Where;\n\n\t\t// need to filter attributes\n\t\tsections.forEach((section) => {\n\t\t\tif (matchQuery(where, section, datasetID)) {\n\t\t\t\tresult.push(makeAttribute(datasetID, keys, section));\n\t\t\t}\n\t\t});\n\n\t\tconst max = 5000;\n\n\t\tif (result.length > max) {\n\t\t\tthrow new ResultTooLargeError(\"Result can not be over 5000\");\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tpublic async listDatasets(): Promise<InsightDataset[]> {\n\t\treturn readMetadata();\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"23f61f7622ae8cdd7b3baef86ce898c9c1c09e83","contentHash":"4190d369c6593c567e6be3913c5bf8bfb72af8c71b897d3d38a0c57473ae6376"},"/Users/danielyoo/project_team034/src/controller/ZipUtil.ts":{"path":"/Users/danielyoo/project_team034/src/controller/ZipUtil.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":35}},"2":{"start":{"line":4,"column":14},"end":{"line":4,"column":30}},"3":{"start":{"line":6,"column":16},"end":{"line":6,"column":27}},"4":{"start":{"line":7,"column":19},"end":{"line":7,"column":65}},"5":{"start":{"line":8,"column":4},"end":{"line":8,"column":33}},"6":{"start":{"line":9,"column":24},"end":{"line":9,"column":46}},"7":{"start":{"line":10,"column":4},"end":{"line":10,"column":43}},"8":{"start":{"line":12,"column":0},"end":{"line":12,"column":46}},"9":{"start":{"line":14,"column":28},"end":{"line":14,"column":102}},"10":{"start":{"line":14,"column":70},"end":{"line":14,"column":101}},"11":{"start":{"line":15,"column":4},"end":{"line":17,"column":5}},"12":{"start":{"line":16,"column":8},"end":{"line":16,"column":72}},"13":{"start":{"line":18,"column":27},"end":{"line":18,"column":130}},"14":{"start":{"line":18,"column":71},"end":{"line":18,"column":129}},"15":{"start":{"line":19,"column":4},"end":{"line":21,"column":5}},"16":{"start":{"line":20,"column":8},"end":{"line":20,"column":53}},"17":{"start":{"line":24,"column":4},"end":{"line":24,"column":118}},"18":{"start":{"line":24,"column":56},"end":{"line":24,"column":116}},"19":{"start":{"line":27,"column":35},"end":{"line":43,"column":6}},"20":{"start":{"line":28,"column":8},"end":{"line":42,"column":9}},"21":{"start":{"line":29,"column":32},"end":{"line":29,"column":58}},"22":{"start":{"line":30,"column":32},"end":{"line":30,"column":62}},"23":{"start":{"line":31,"column":38},"end":{"line":31,"column":40}},"24":{"start":{"line":32,"column":12},"end":{"line":37,"column":13}},"25":{"start":{"line":33,"column":16},"end":{"line":35,"column":17}},"26":{"start":{"line":34,"column":20},"end":{"line":34,"column":83}},"27":{"start":{"line":36,"column":16},"end":{"line":36,"column":70}},"28":{"start":{"line":38,"column":12},"end":{"line":38,"column":37}},"29":{"start":{"line":41,"column":12},"end":{"line":41,"column":82}},"30":{"start":{"line":44,"column":30},"end":{"line":44,"column":71}},"31":{"start":{"line":45,"column":21},"end":{"line":45,"column":45}},"32":{"start":{"line":46,"column":22},"end":{"line":46,"column":37}},"33":{"start":{"line":47,"column":4},"end":{"line":47,"column":35}},"34":{"start":{"line":50,"column":27},"end":{"line":50,"column":116}},"35":{"start":{"line":51,"column":24},"end":{"line":51,"column":44}},"36":{"start":{"line":52,"column":4},"end":{"line":52,"column":72}},"37":{"start":{"line":52,"column":43},"end":{"line":52,"column":70}},"38":{"start":{"line":55,"column":4},"end":{"line":66,"column":6}}},"fnMap":{"0":{"name":"processZipContent","decl":{"start":{"line":5,"column":15},"end":{"line":5,"column":32}},"loc":{"start":{"line":5,"column":42},"end":{"line":11,"column":1}},"line":5},"1":{"name":"validateZipStructure","decl":{"start":{"line":13,"column":9},"end":{"line":13,"column":29}},"loc":{"start":{"line":13,"column":35},"end":{"line":22,"column":1}},"line":13},"2":{"name":"(anonymous_2)","decl":{"start":{"line":14,"column":56},"end":{"line":14,"column":57}},"loc":{"start":{"line":14,"column":70},"end":{"line":14,"column":101}},"line":14},"3":{"name":"(anonymous_3)","decl":{"start":{"line":18,"column":57},"end":{"line":18,"column":58}},"loc":{"start":{"line":18,"column":71},"end":{"line":18,"column":129}},"line":18},"4":{"name":"getCourseFiles","decl":{"start":{"line":23,"column":9},"end":{"line":23,"column":23}},"loc":{"start":{"line":23,"column":32},"end":{"line":25,"column":1}},"line":23},"5":{"name":"(anonymous_5)","decl":{"start":{"line":24,"column":46},"end":{"line":24,"column":47}},"loc":{"start":{"line":24,"column":56},"end":{"line":24,"column":116}},"line":24},"6":{"name":"processCoursesData","decl":{"start":{"line":26,"column":15},"end":{"line":26,"column":33}},"loc":{"start":{"line":26,"column":47},"end":{"line":48,"column":1}},"line":26},"7":{"name":"(anonymous_7)","decl":{"start":{"line":27,"column":51},"end":{"line":27,"column":52}},"loc":{"start":{"line":27,"column":67},"end":{"line":43,"column":5}},"line":27},"8":{"name":"isValidCourseSection","decl":{"start":{"line":49,"column":9},"end":{"line":49,"column":29}},"loc":{"start":{"line":49,"column":39},"end":{"line":53,"column":1}},"line":49},"9":{"name":"(anonymous_9)","decl":{"start":{"line":52,"column":32},"end":{"line":52,"column":33}},"loc":{"start":{"line":52,"column":43},"end":{"line":52,"column":70}},"line":52},"10":{"name":"processCourseSection","decl":{"start":{"line":54,"column":9},"end":{"line":54,"column":29}},"loc":{"start":{"line":54,"column":39},"end":{"line":67,"column":1}},"line":54}},"branchMap":{"0":{"loc":{"start":{"line":15,"column":4},"end":{"line":17,"column":5}},"type":"if","locations":[{"start":{"line":15,"column":4},"end":{"line":17,"column":5}},{"start":{"line":15,"column":4},"end":{"line":17,"column":5}}],"line":15},"1":{"loc":{"start":{"line":18,"column":71},"end":{"line":18,"column":129}},"type":"binary-expr","locations":[{"start":{"line":18,"column":71},"end":{"line":18,"column":102}},{"start":{"line":18,"column":106},"end":{"line":18,"column":129}}],"line":18},"2":{"loc":{"start":{"line":19,"column":4},"end":{"line":21,"column":5}},"type":"if","locations":[{"start":{"line":19,"column":4},"end":{"line":21,"column":5}},{"start":{"line":19,"column":4},"end":{"line":21,"column":5}}],"line":19},"3":{"loc":{"start":{"line":24,"column":56},"end":{"line":24,"column":116}},"type":"binary-expr","locations":[{"start":{"line":24,"column":56},"end":{"line":24,"column":88}},{"start":{"line":24,"column":92},"end":{"line":24,"column":116}}],"line":24},"4":{"loc":{"start":{"line":33,"column":16},"end":{"line":35,"column":17}},"type":"if","locations":[{"start":{"line":33,"column":16},"end":{"line":35,"column":17}},{"start":{"line":33,"column":16},"end":{"line":35,"column":17}}],"line":33}},"s":{"0":1,"1":1,"2":1,"3":44,"4":44,"5":43,"6":39,"7":39,"8":1,"9":43,"10":44,"11":43,"12":3,"13":40,"14":6022,"15":40,"16":1,"17":39,"18":6021,"19":39,"20":6020,"21":6020,"22":6020,"23":6017,"24":6017,"25":66260,"26":1,"27":66259,"28":6013,"29":7,"30":39,"31":33,"32":33,"33":33,"34":66260,"35":66260,"36":66260,"37":662592,"38":66259},"f":{"0":44,"1":43,"2":44,"3":6022,"4":39,"5":6021,"6":39,"7":6020,"8":66260,"9":662592,"10":66259},"b":{"0":[3,40],"1":[6022,6022],"2":[1,39],"3":[6021,6021],"4":[1,66259]},"inputSourceMap":{"version":3,"file":"/Users/danielyoo/project_team034/src/controller/ZipUtil.ts","sources":["/Users/danielyoo/project_team034/src/controller/ZipUtil.ts"],"names":[],"mappings":"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","sourcesContent":["import JSZip = require(\"jszip\");\nimport { Section } from \"./InsightFacade\";\n\ninterface PreProcessedSection {\n\tid: string;\n\tCourse: string;\n\tTitle: string;\n\tProfessor: string;\n\tSubject: string;\n\tYear: string;\n\tAvg: string;\n\tPass: string;\n\tFail: string;\n\tAudit: string;\n}\n\ninterface ProcessResult {\n\tsections: Section[];\n\ttotalRows: number;\n}\n\nexport async function processZipContent(content: string): Promise<ProcessResult> {\n\tconst zip = new JSZip();\n\tconst folder = await zip.loadAsync(content, { base64: true });\n\n\tvalidateZipStructure(folder);\n\n\tconst courseFiles = getCourseFiles(folder);\n\treturn processCoursesData(courseFiles);\n}\n\nfunction validateZipStructure(zip: JSZip): void {\n\tconst hasCourseFolder = Object.keys(zip.files).some((filename) => filename.startsWith(\"courses/\"));\n\tif (!hasCourseFolder) {\n\t\tthrow new Error(\"Zip file does not contain a 'courses' folder\");\n\t}\n\n\tconst coursesContent = Object.keys(zip.files).filter(\n\t\t(filename) => filename.startsWith(\"courses/\") && filename !== \"courses/\"\n\t);\n\tif (coursesContent.length === 0) {\n\t\tthrow new Error(\"'courses' folder is empty\");\n\t}\n}\n\nfunction getCourseFiles(folder: JSZip): JSZip.JSZipObject[] {\n\treturn Object.values(folder.files).filter((file) => file.name.startsWith(\"courses/\") && file.name !== \"courses/\");\n}\n\nasync function processCoursesData(courseFiles: JSZip.JSZipObject[]): Promise<ProcessResult> {\n\tconst fileProcessingPromises = courseFiles.map(async (file) => {\n\t\ttry {\n\t\t\tconst fileContent = await file.async(\"string\");\n\t\t\tconst preSections: PreProcessedSection[] = JSON.parse(fileContent).result;\n\t\t\tconst processedSections: Section[] = [];\n\n\t\t\tfor (const section of preSections) {\n\t\t\t\tif (!isValidCourseSection(section)) {\n\t\t\t\t\tthrow new Error(`Invalid course section in file ${file.name}`);\n\t\t\t\t}\n\t\t\t\tprocessedSections.push(processCourseSection(section));\n\t\t\t}\n\n\t\t\treturn processedSections;\n\t\t} catch (err) {\n\t\t\tthrow new Error(`Error processing file ${file.name}: ${(err as Error).message}`);\n\t\t}\n\t});\n\n\tconst processedSections = await Promise.all(fileProcessingPromises);\n\tconst sections: Section[] = processedSections.flat();\n\tconst totalRows = sections.length;\n\n\treturn { sections, totalRows };\n}\n\nfunction isValidCourseSection(section: PreProcessedSection): boolean {\n\tconst requiredFields = [\"id\", \"Course\", \"Title\", \"Professor\", \"Subject\", \"Year\", \"Avg\", \"Pass\", \"Fail\", \"Audit\"];\n\n\tconst sectionKeys = Object.keys(section);\n\treturn requiredFields.every((field) => sectionKeys.includes(field));\n}\n\nfunction processCourseSection(section: PreProcessedSection): Section {\n\treturn {\n\t\tuuid: section.id.toString(),\n\t\tid: section.Course,\n\t\ttitle: section.Title,\n\t\tinstructor: section.Professor,\n\t\tdept: section.Subject,\n\t\tyear: parseInt(section.Year, 10),\n\t\tavg: parseFloat(section.Avg),\n\t\tpass: parseInt(section.Pass, 10),\n\t\tfail: parseInt(section.Fail, 10),\n\t\taudit: parseInt(section.Audit, 10),\n\t};\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"a137bd93dfb68d519d1cdc04da7be2ed994b20c5","contentHash":"b80a1094d601b12611b873890fbbfb60d18c4c4948f52d4476cd516264f5583c"},"/Users/danielyoo/project_team034/src/controller/QueryUtil.ts":{"path":"/Users/danielyoo/project_team034/src/controller/QueryUtil.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":75}},"2":{"start":{"line":4,"column":25},"end":{"line":4,"column":52}},"3":{"start":{"line":5,"column":16},"end":{"line":5,"column":56}},"4":{"start":{"line":6,"column":16},"end":{"line":6,"column":61}},"5":{"start":{"line":8,"column":20},"end":{"line":8,"column":35}},"6":{"start":{"line":9,"column":16},"end":{"line":9,"column":18}},"7":{"start":{"line":10,"column":4},"end":{"line":16,"column":5}},"8":{"start":{"line":11,"column":8},"end":{"line":11,"column":30}},"9":{"start":{"line":12,"column":8},"end":{"line":14,"column":9}},"10":{"start":{"line":13,"column":12},"end":{"line":13,"column":81}},"11":{"start":{"line":15,"column":8},"end":{"line":15,"column":36}},"12":{"start":{"line":17,"column":4},"end":{"line":21,"column":6}},"13":{"start":{"line":23,"column":0},"end":{"line":23,"column":36}},"14":{"start":{"line":25,"column":4},"end":{"line":27,"column":5}},"15":{"start":{"line":25,"column":57},"end":{"line":25,"column":80}},"16":{"start":{"line":26,"column":8},"end":{"line":26,"column":102}},"17":{"start":{"line":28,"column":22},"end":{"line":28,"column":46}},"18":{"start":{"line":29,"column":4},"end":{"line":31,"column":5}},"19":{"start":{"line":30,"column":8},"end":{"line":30,"column":82}},"20":{"start":{"line":32,"column":4},"end":{"line":46,"column":7}},"21":{"start":{"line":33,"column":25},"end":{"line":33,"column":39}},"22":{"start":{"line":34,"column":20},"end":{"line":34,"column":21}},"23":{"start":{"line":35,"column":8},"end":{"line":37,"column":9}},"24":{"start":{"line":36,"column":12},"end":{"line":36,"column":95}},"25":{"start":{"line":38,"column":29},"end":{"line":38,"column":40}},"26":{"start":{"line":39,"column":8},"end":{"line":41,"column":9}},"27":{"start":{"line":40,"column":12},"end":{"line":40,"column":92}},"28":{"start":{"line":42,"column":20},"end":{"line":42,"column":31}},"29":{"start":{"line":43,"column":8},"end":{"line":45,"column":9}},"30":{"start":{"line":44,"column":12},"end":{"line":44,"column":109}},"31":{"start":{"line":49,"column":4},"end":{"line":51,"column":5}},"32":{"start":{"line":50,"column":8},"end":{"line":50,"column":78}},"33":{"start":{"line":52,"column":18},"end":{"line":52,"column":23}},"34":{"start":{"line":53,"column":4},"end":{"line":55,"column":5}},"35":{"start":{"line":54,"column":8},"end":{"line":54,"column":92}},"36":{"start":{"line":56,"column":4},"end":{"line":58,"column":5}},"37":{"start":{"line":57,"column":8},"end":{"line":57,"column":94}},"38":{"start":{"line":59,"column":4},"end":{"line":61,"column":5}},"39":{"start":{"line":60,"column":8},"end":{"line":60,"column":96}},"40":{"start":{"line":62,"column":20},"end":{"line":62,"column":41}},"41":{"start":{"line":63,"column":4},"end":{"line":63,"column":29}},"42":{"start":{"line":64,"column":22},"end":{"line":64,"column":46}},"43":{"start":{"line":65,"column":4},"end":{"line":81,"column":5}},"44":{"start":{"line":66,"column":8},"end":{"line":68,"column":9}},"45":{"start":{"line":67,"column":12},"end":{"line":67,"column":79}},"46":{"start":{"line":69,"column":27},"end":{"line":69,"column":57}},"47":{"start":{"line":70,"column":20},"end":{"line":70,"column":21}},"48":{"start":{"line":71,"column":8},"end":{"line":73,"column":9}},"49":{"start":{"line":72,"column":12},"end":{"line":72,"column":95}},"50":{"start":{"line":74,"column":22},"end":{"line":74,"column":35}},"51":{"start":{"line":75,"column":8},"end":{"line":77,"column":9}},"52":{"start":{"line":76,"column":12},"end":{"line":76,"column":93}},"53":{"start":{"line":78,"column":8},"end":{"line":80,"column":9}},"54":{"start":{"line":79,"column":12},"end":{"line":79,"column":89}},"55":{"start":{"line":83,"column":0},"end":{"line":83,"column":38}},"56":{"start":{"line":85,"column":21},"end":{"line":85,"column":39}},"57":{"start":{"line":86,"column":16},"end":{"line":86,"column":17}},"58":{"start":{"line":87,"column":4},"end":{"line":89,"column":5}},"59":{"start":{"line":88,"column":8},"end":{"line":88,"column":112}},"60":{"start":{"line":90,"column":4},"end":{"line":92,"column":5}},"61":{"start":{"line":91,"column":8},"end":{"line":91,"column":95}},"62":{"start":{"line":93,"column":4},"end":{"line":93,"column":23}},"63":{"start":{"line":96,"column":22},"end":{"line":96,"column":43}},"64":{"start":{"line":97,"column":19},"end":{"line":97,"column":35}},"65":{"start":{"line":98,"column":16},"end":{"line":98,"column":57}},"66":{"start":{"line":99,"column":4},"end":{"line":101,"column":5}},"67":{"start":{"line":100,"column":8},"end":{"line":100,"column":90}},"68":{"start":{"line":102,"column":25},"end":{"line":102,"column":37}},"69":{"start":{"line":103,"column":24},"end":{"line":103,"column":54}},"70":{"start":{"line":104,"column":4},"end":{"line":106,"column":5}},"71":{"start":{"line":105,"column":8},"end":{"line":105,"column":82}},"72":{"start":{"line":107,"column":4},"end":{"line":109,"column":5}},"73":{"start":{"line":108,"column":8},"end":{"line":108,"column":82}},"74":{"start":{"line":110,"column":4},"end":{"line":119,"column":5}},"75":{"start":{"line":112,"column":12},"end":{"line":112,"column":46}},"76":{"start":{"line":114,"column":12},"end":{"line":114,"column":46}},"77":{"start":{"line":116,"column":12},"end":{"line":116,"column":48}},"78":{"start":{"line":118,"column":12},"end":{"line":118,"column":97}},"79":{"start":{"line":122,"column":22},"end":{"line":122,"column":44}},"80":{"start":{"line":123,"column":16},"end":{"line":123,"column":17}},"81":{"start":{"line":124,"column":22},"end":{"line":124,"column":34}},"82":{"start":{"line":125,"column":16},"end":{"line":125,"column":32}},"83":{"start":{"line":126,"column":4},"end":{"line":128,"column":5}},"84":{"start":{"line":127,"column":8},"end":{"line":127,"column":66}},"85":{"start":{"line":129,"column":4},"end":{"line":142,"column":5}},"86":{"start":{"line":130,"column":8},"end":{"line":132,"column":9}},"87":{"start":{"line":131,"column":12},"end":{"line":131,"column":24}},"88":{"start":{"line":133,"column":8},"end":{"line":136,"column":9}},"89":{"start":{"line":134,"column":26},"end":{"line":134,"column":56}},"90":{"start":{"line":135,"column":12},"end":{"line":135,"column":44}},"91":{"start":{"line":137,"column":8},"end":{"line":140,"column":9}},"92":{"start":{"line":138,"column":26},"end":{"line":138,"column":56}},"93":{"start":{"line":139,"column":12},"end":{"line":139,"column":44}},"94":{"start":{"line":141,"column":8},"end":{"line":141,"column":121}},"95":{"start":{"line":143,"column":18},"end":{"line":143,"column":19}},"96":{"start":{"line":144,"column":4},"end":{"line":146,"column":5}},"97":{"start":{"line":145,"column":8},"end":{"line":145,"column":94}},"98":{"start":{"line":147,"column":4},"end":{"line":149,"column":5}},"99":{"start":{"line":148,"column":8},"end":{"line":148,"column":121}},"100":{"start":{"line":150,"column":18},"end":{"line":150,"column":49}},"101":{"start":{"line":151,"column":4},"end":{"line":151,"column":36}},"102":{"start":{"line":154,"column":22},"end":{"line":154,"column":43}},"103":{"start":{"line":155,"column":19},"end":{"line":155,"column":35}},"104":{"start":{"line":156,"column":4},"end":{"line":158,"column":5}},"105":{"start":{"line":157,"column":8},"end":{"line":157,"column":80}},"106":{"start":{"line":159,"column":16},"end":{"line":159,"column":57}},"107":{"start":{"line":160,"column":4},"end":{"line":162,"column":5}},"108":{"start":{"line":161,"column":8},"end":{"line":161,"column":90}},"109":{"start":{"line":163,"column":24},"end":{"line":163,"column":54}},"110":{"start":{"line":164,"column":25},"end":{"line":164,"column":37}},"111":{"start":{"line":165,"column":4},"end":{"line":167,"column":5}},"112":{"start":{"line":166,"column":8},"end":{"line":166,"column":44}},"113":{"start":{"line":168,"column":4},"end":{"line":170,"column":5}},"114":{"start":{"line":169,"column":8},"end":{"line":169,"column":61}},"115":{"start":{"line":171,"column":4},"end":{"line":171,"column":81}},"116":{"start":{"line":174,"column":22},"end":{"line":174,"column":43}},"117":{"start":{"line":175,"column":19},"end":{"line":175,"column":35}},"118":{"start":{"line":176,"column":4},"end":{"line":178,"column":5}},"119":{"start":{"line":177,"column":8},"end":{"line":177,"column":88}},"120":{"start":{"line":179,"column":4},"end":{"line":181,"column":5}},"121":{"start":{"line":180,"column":8},"end":{"line":180,"column":55}},"122":{"start":{"line":182,"column":4},"end":{"line":184,"column":5}},"123":{"start":{"line":183,"column":8},"end":{"line":183,"column":54}},"124":{"start":{"line":185,"column":4},"end":{"line":185,"column":50}},"125":{"start":{"line":188,"column":4},"end":{"line":190,"column":5}},"126":{"start":{"line":189,"column":8},"end":{"line":189,"column":88}},"127":{"start":{"line":191,"column":22},"end":{"line":191,"column":43}},"128":{"start":{"line":192,"column":19},"end":{"line":192,"column":35}},"129":{"start":{"line":193,"column":4},"end":{"line":195,"column":5}},"130":{"start":{"line":194,"column":8},"end":{"line":194,"column":60}},"131":{"start":{"line":196,"column":4},"end":{"line":206,"column":5}},"132":{"start":{"line":197,"column":8},"end":{"line":199,"column":9}},"133":{"start":{"line":198,"column":12},"end":{"line":198,"column":81}},"134":{"start":{"line":200,"column":8},"end":{"line":204,"column":9}},"135":{"start":{"line":201,"column":12},"end":{"line":203,"column":13}},"136":{"start":{"line":202,"column":16},"end":{"line":202,"column":29}},"137":{"start":{"line":205,"column":8},"end":{"line":205,"column":20}},"138":{"start":{"line":207,"column":4},"end":{"line":217,"column":5}},"139":{"start":{"line":208,"column":8},"end":{"line":210,"column":9}},"140":{"start":{"line":209,"column":12},"end":{"line":209,"column":80}},"141":{"start":{"line":211,"column":8},"end":{"line":215,"column":9}},"142":{"start":{"line":212,"column":12},"end":{"line":214,"column":13}},"143":{"start":{"line":213,"column":16},"end":{"line":213,"column":28}},"144":{"start":{"line":216,"column":8},"end":{"line":216,"column":21}},"145":{"start":{"line":218,"column":4},"end":{"line":218,"column":88}},"146":{"start":{"line":220,"column":0},"end":{"line":220,"column":32}}},"fnMap":{"0":{"name":"parseOptions","decl":{"start":{"line":7,"column":9},"end":{"line":7,"column":21}},"loc":{"start":{"line":7,"column":31},"end":{"line":22,"column":1}},"line":7},"1":{"name":"validateColumns","decl":{"start":{"line":24,"column":9},"end":{"line":24,"column":24}},"loc":{"start":{"line":24,"column":34},"end":{"line":47,"column":1}},"line":24},"2":{"name":"(anonymous_2)","decl":{"start":{"line":25,"column":48},"end":{"line":25,"column":49}},"loc":{"start":{"line":25,"column":57},"end":{"line":25,"column":80}},"line":25},"3":{"name":"(anonymous_3)","decl":{"start":{"line":32,"column":20},"end":{"line":32,"column":21}},"loc":{"start":{"line":32,"column":29},"end":{"line":46,"column":5}},"line":32},"4":{"name":"validateQuery","decl":{"start":{"line":48,"column":9},"end":{"line":48,"column":22}},"loc":{"start":{"line":48,"column":30},"end":{"line":82,"column":1}},"line":48},"5":{"name":"getKey","decl":{"start":{"line":84,"column":9},"end":{"line":84,"column":15}},"loc":{"start":{"line":84,"column":36},"end":{"line":94,"column":1}},"line":84},"6":{"name":"MComparison","decl":{"start":{"line":95,"column":9},"end":{"line":95,"column":20}},"loc":{"start":{"line":95,"column":48},"end":{"line":120,"column":1}},"line":95},"7":{"name":"wildCardComparison","decl":{"start":{"line":121,"column":9},"end":{"line":121,"column":27}},"loc":{"start":{"line":121,"column":55},"end":{"line":152,"column":1}},"line":121},"8":{"name":"SComparison","decl":{"start":{"line":153,"column":9},"end":{"line":153,"column":20}},"loc":{"start":{"line":153,"column":48},"end":{"line":172,"column":1}},"line":153},"9":{"name":"matchSingleObject","decl":{"start":{"line":173,"column":9},"end":{"line":173,"column":26}},"loc":{"start":{"line":173,"column":54},"end":{"line":186,"column":1}},"line":173},"10":{"name":"matchQuery","decl":{"start":{"line":187,"column":9},"end":{"line":187,"column":19}},"loc":{"start":{"line":187,"column":47},"end":{"line":219,"column":1}},"line":187}},"branchMap":{"0":{"loc":{"start":{"line":10,"column":4},"end":{"line":16,"column":5}},"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":16,"column":5}},{"start":{"line":10,"column":4},"end":{"line":16,"column":5}}],"line":10},"1":{"loc":{"start":{"line":12,"column":8},"end":{"line":14,"column":9}},"type":"if","locations":[{"start":{"line":12,"column":8},"end":{"line":14,"column":9}},{"start":{"line":12,"column":8},"end":{"line":14,"column":9}}],"line":12},"2":{"loc":{"start":{"line":25,"column":4},"end":{"line":27,"column":5}},"type":"if","locations":[{"start":{"line":25,"column":4},"end":{"line":27,"column":5}},{"start":{"line":25,"column":4},"end":{"line":27,"column":5}}],"line":25},"3":{"loc":{"start":{"line":25,"column":8},"end":{"line":25,"column":105}},"type":"binary-expr","locations":[{"start":{"line":25,"column":8},"end":{"line":25,"column":31}},{"start":{"line":25,"column":35},"end":{"line":25,"column":81}},{"start":{"line":25,"column":85},"end":{"line":25,"column":105}}],"line":25},"4":{"loc":{"start":{"line":29,"column":4},"end":{"line":31,"column":5}},"type":"if","locations":[{"start":{"line":29,"column":4},"end":{"line":31,"column":5}},{"start":{"line":29,"column":4},"end":{"line":31,"column":5}}],"line":29},"5":{"loc":{"start":{"line":35,"column":8},"end":{"line":37,"column":9}},"type":"if","locations":[{"start":{"line":35,"column":8},"end":{"line":37,"column":9}},{"start":{"line":35,"column":8},"end":{"line":37,"column":9}}],"line":35},"6":{"loc":{"start":{"line":39,"column":8},"end":{"line":41,"column":9}},"type":"if","locations":[{"start":{"line":39,"column":8},"end":{"line":41,"column":9}},{"start":{"line":39,"column":8},"end":{"line":41,"column":9}}],"line":39},"7":{"loc":{"start":{"line":43,"column":8},"end":{"line":45,"column":9}},"type":"if","locations":[{"start":{"line":43,"column":8},"end":{"line":45,"column":9}},{"start":{"line":43,"column":8},"end":{"line":45,"column":9}}],"line":43},"8":{"loc":{"start":{"line":43,"column":12},"end":{"line":43,"column":60}},"type":"binary-expr","locations":[{"start":{"line":43,"column":12},"end":{"line":43,"column":34}},{"start":{"line":43,"column":38},"end":{"line":43,"column":60}}],"line":43},"9":{"loc":{"start":{"line":49,"column":4},"end":{"line":51,"column":5}},"type":"if","locations":[{"start":{"line":49,"column":4},"end":{"line":51,"column":5}},{"start":{"line":49,"column":4},"end":{"line":51,"column":5}}],"line":49},"10":{"loc":{"start":{"line":49,"column":8},"end":{"line":49,"column":51}},"type":"binary-expr","locations":[{"start":{"line":49,"column":8},"end":{"line":49,"column":22}},{"start":{"line":49,"column":26},"end":{"line":49,"column":51}}],"line":49},"11":{"loc":{"start":{"line":53,"column":4},"end":{"line":55,"column":5}},"type":"if","locations":[{"start":{"line":53,"column":4},"end":{"line":55,"column":5}},{"start":{"line":53,"column":4},"end":{"line":55,"column":5}}],"line":53},"12":{"loc":{"start":{"line":56,"column":4},"end":{"line":58,"column":5}},"type":"if","locations":[{"start":{"line":56,"column":4},"end":{"line":58,"column":5}},{"start":{"line":56,"column":4},"end":{"line":58,"column":5}}],"line":56},"13":{"loc":{"start":{"line":59,"column":4},"end":{"line":61,"column":5}},"type":"if","locations":[{"start":{"line":59,"column":4},"end":{"line":61,"column":5}},{"start":{"line":59,"column":4},"end":{"line":61,"column":5}}],"line":59},"14":{"loc":{"start":{"line":65,"column":4},"end":{"line":81,"column":5}},"type":"if","locations":[{"start":{"line":65,"column":4},"end":{"line":81,"column":5}},{"start":{"line":65,"column":4},"end":{"line":81,"column":5}}],"line":65},"15":{"loc":{"start":{"line":66,"column":8},"end":{"line":68,"column":9}},"type":"if","locations":[{"start":{"line":66,"column":8},"end":{"line":68,"column":9}},{"start":{"line":66,"column":8},"end":{"line":68,"column":9}}],"line":66},"16":{"loc":{"start":{"line":71,"column":8},"end":{"line":73,"column":9}},"type":"if","locations":[{"start":{"line":71,"column":8},"end":{"line":73,"column":9}},{"start":{"line":71,"column":8},"end":{"line":73,"column":9}}],"line":71},"17":{"loc":{"start":{"line":75,"column":8},"end":{"line":77,"column":9}},"type":"if","locations":[{"start":{"line":75,"column":8},"end":{"line":77,"column":9}},{"start":{"line":75,"column":8},"end":{"line":77,"column":9}}],"line":75},"18":{"loc":{"start":{"line":78,"column":8},"end":{"line":80,"column":9}},"type":"if","locations":[{"start":{"line":78,"column":8},"end":{"line":80,"column":9}},{"start":{"line":78,"column":8},"end":{"line":80,"column":9}}],"line":78},"19":{"loc":{"start":{"line":87,"column":4},"end":{"line":89,"column":5}},"type":"if","locations":[{"start":{"line":87,"column":4},"end":{"line":89,"column":5}},{"start":{"line":87,"column":4},"end":{"line":89,"column":5}}],"line":87},"20":{"loc":{"start":{"line":90,"column":4},"end":{"line":92,"column":5}},"type":"if","locations":[{"start":{"line":90,"column":4},"end":{"line":92,"column":5}},{"start":{"line":90,"column":4},"end":{"line":92,"column":5}}],"line":90},"21":{"loc":{"start":{"line":99,"column":4},"end":{"line":101,"column":5}},"type":"if","locations":[{"start":{"line":99,"column":4},"end":{"line":101,"column":5}},{"start":{"line":99,"column":4},"end":{"line":101,"column":5}}],"line":99},"22":{"loc":{"start":{"line":104,"column":4},"end":{"line":106,"column":5}},"type":"if","locations":[{"start":{"line":104,"column":4},"end":{"line":106,"column":5}},{"start":{"line":104,"column":4},"end":{"line":106,"column":5}}],"line":104},"23":{"loc":{"start":{"line":107,"column":4},"end":{"line":109,"column":5}},"type":"if","locations":[{"start":{"line":107,"column":4},"end":{"line":109,"column":5}},{"start":{"line":107,"column":4},"end":{"line":109,"column":5}}],"line":107},"24":{"loc":{"start":{"line":110,"column":4},"end":{"line":119,"column":5}},"type":"switch","locations":[{"start":{"line":111,"column":8},"end":{"line":112,"column":46}},{"start":{"line":113,"column":8},"end":{"line":114,"column":46}},{"start":{"line":115,"column":8},"end":{"line":116,"column":48}},{"start":{"line":117,"column":8},"end":{"line":118,"column":97}}],"line":110},"25":{"loc":{"start":{"line":126,"column":4},"end":{"line":128,"column":5}},"type":"if","locations":[{"start":{"line":126,"column":4},"end":{"line":128,"column":5}},{"start":{"line":126,"column":4},"end":{"line":128,"column":5}}],"line":126},"26":{"loc":{"start":{"line":129,"column":4},"end":{"line":142,"column":5}},"type":"if","locations":[{"start":{"line":129,"column":4},"end":{"line":142,"column":5}},{"start":{"line":129,"column":4},"end":{"line":142,"column":5}}],"line":129},"27":{"loc":{"start":{"line":130,"column":8},"end":{"line":132,"column":9}},"type":"if","locations":[{"start":{"line":130,"column":8},"end":{"line":132,"column":9}},{"start":{"line":130,"column":8},"end":{"line":132,"column":9}}],"line":130},"28":{"loc":{"start":{"line":133,"column":8},"end":{"line":136,"column":9}},"type":"if","locations":[{"start":{"line":133,"column":8},"end":{"line":136,"column":9}},{"start":{"line":133,"column":8},"end":{"line":136,"column":9}}],"line":133},"29":{"loc":{"start":{"line":137,"column":8},"end":{"line":140,"column":9}},"type":"if","locations":[{"start":{"line":137,"column":8},"end":{"line":140,"column":9}},{"start":{"line":137,"column":8},"end":{"line":140,"column":9}}],"line":137},"30":{"loc":{"start":{"line":144,"column":4},"end":{"line":146,"column":5}},"type":"if","locations":[{"start":{"line":144,"column":4},"end":{"line":146,"column":5}},{"start":{"line":144,"column":4},"end":{"line":146,"column":5}}],"line":144},"31":{"loc":{"start":{"line":147,"column":4},"end":{"line":149,"column":5}},"type":"if","locations":[{"start":{"line":147,"column":4},"end":{"line":149,"column":5}},{"start":{"line":147,"column":4},"end":{"line":149,"column":5}}],"line":147},"32":{"loc":{"start":{"line":147,"column":8},"end":{"line":147,"column":38}},"type":"binary-expr","locations":[{"start":{"line":147,"column":8},"end":{"line":147,"column":24}},{"start":{"line":147,"column":28},"end":{"line":147,"column":38}}],"line":147},"33":{"loc":{"start":{"line":156,"column":4},"end":{"line":158,"column":5}},"type":"if","locations":[{"start":{"line":156,"column":4},"end":{"line":158,"column":5}},{"start":{"line":156,"column":4},"end":{"line":158,"column":5}}],"line":156},"34":{"loc":{"start":{"line":160,"column":4},"end":{"line":162,"column":5}},"type":"if","locations":[{"start":{"line":160,"column":4},"end":{"line":162,"column":5}},{"start":{"line":160,"column":4},"end":{"line":162,"column":5}}],"line":160},"35":{"loc":{"start":{"line":165,"column":4},"end":{"line":167,"column":5}},"type":"if","locations":[{"start":{"line":165,"column":4},"end":{"line":167,"column":5}},{"start":{"line":165,"column":4},"end":{"line":167,"column":5}}],"line":165},"36":{"loc":{"start":{"line":168,"column":4},"end":{"line":170,"column":5}},"type":"if","locations":[{"start":{"line":168,"column":4},"end":{"line":170,"column":5}},{"start":{"line":168,"column":4},"end":{"line":170,"column":5}}],"line":168},"37":{"loc":{"start":{"line":168,"column":8},"end":{"line":168,"column":75}},"type":"binary-expr","locations":[{"start":{"line":168,"column":8},"end":{"line":168,"column":40}},{"start":{"line":168,"column":44},"end":{"line":168,"column":75}}],"line":168},"38":{"loc":{"start":{"line":176,"column":4},"end":{"line":178,"column":5}},"type":"if","locations":[{"start":{"line":176,"column":4},"end":{"line":178,"column":5}},{"start":{"line":176,"column":4},"end":{"line":178,"column":5}}],"line":176},"39":{"loc":{"start":{"line":179,"column":4},"end":{"line":181,"column":5}},"type":"if","locations":[{"start":{"line":179,"column":4},"end":{"line":181,"column":5}},{"start":{"line":179,"column":4},"end":{"line":181,"column":5}}],"line":179},"40":{"loc":{"start":{"line":182,"column":4},"end":{"line":184,"column":5}},"type":"if","locations":[{"start":{"line":182,"column":4},"end":{"line":184,"column":5}},{"start":{"line":182,"column":4},"end":{"line":184,"column":5}}],"line":182},"41":{"loc":{"start":{"line":188,"column":4},"end":{"line":190,"column":5}},"type":"if","locations":[{"start":{"line":188,"column":4},"end":{"line":190,"column":5}},{"start":{"line":188,"column":4},"end":{"line":190,"column":5}}],"line":188},"42":{"loc":{"start":{"line":193,"column":4},"end":{"line":195,"column":5}},"type":"if","locations":[{"start":{"line":193,"column":4},"end":{"line":195,"column":5}},{"start":{"line":193,"column":4},"end":{"line":195,"column":5}}],"line":193},"43":{"loc":{"start":{"line":196,"column":4},"end":{"line":206,"column":5}},"type":"if","locations":[{"start":{"line":196,"column":4},"end":{"line":206,"column":5}},{"start":{"line":196,"column":4},"end":{"line":206,"column":5}}],"line":196},"44":{"loc":{"start":{"line":197,"column":8},"end":{"line":199,"column":9}},"type":"if","locations":[{"start":{"line":197,"column":8},"end":{"line":199,"column":9}},{"start":{"line":197,"column":8},"end":{"line":199,"column":9}}],"line":197},"45":{"loc":{"start":{"line":201,"column":12},"end":{"line":203,"column":13}},"type":"if","locations":[{"start":{"line":201,"column":12},"end":{"line":203,"column":13}},{"start":{"line":201,"column":12},"end":{"line":203,"column":13}}],"line":201},"46":{"loc":{"start":{"line":207,"column":4},"end":{"line":217,"column":5}},"type":"if","locations":[{"start":{"line":207,"column":4},"end":{"line":217,"column":5}},{"start":{"line":207,"column":4},"end":{"line":217,"column":5}}],"line":207},"47":{"loc":{"start":{"line":208,"column":8},"end":{"line":210,"column":9}},"type":"if","locations":[{"start":{"line":208,"column":8},"end":{"line":210,"column":9}},{"start":{"line":208,"column":8},"end":{"line":210,"column":9}}],"line":208},"48":{"loc":{"start":{"line":212,"column":12},"end":{"line":214,"column":13}},"type":"if","locations":[{"start":{"line":212,"column":12},"end":{"line":214,"column":13}},{"start":{"line":212,"column":12},"end":{"line":214,"column":13}}],"line":212}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":36,"6":36,"7":36,"8":3,"9":3,"10":1,"11":2,"12":35,"13":1,"14":38,"15":80,"16":1,"17":37,"18":37,"19":0,"20":37,"21":79,"22":79,"23":79,"24":0,"25":79,"26":79,"27":1,"28":78,"29":78,"30":0,"31":42,"32":1,"33":41,"34":41,"35":1,"36":40,"37":1,"38":39,"39":1,"40":38,"41":38,"42":36,"43":36,"44":3,"45":0,"46":3,"47":3,"48":3,"49":0,"50":3,"51":3,"52":0,"53":3,"54":0,"55":1,"56":1767941,"57":1767941,"58":1767941,"59":2,"60":1767939,"61":0,"62":1767939,"63":1349776,"64":1349776,"65":1349776,"66":1349774,"67":10,"68":1349764,"69":1349764,"70":1349764,"71":0,"72":1349764,"73":5,"74":1349759,"75":129216,"76":1155872,"77":64671,"78":0,"79":274565,"80":274565,"81":274565,"82":274565,"83":274565,"84":2,"85":274563,"86":208894,"87":49,"88":208845,"89":1723,"90":1723,"91":207122,"92":207121,"93":207121,"94":1,"95":65669,"96":65669,"97":0,"98":65669,"99":1,"100":65668,"101":65668,"102":418165,"103":418165,"104":418165,"105":0,"106":418165,"107":418165,"108":1,"109":418164,"110":418164,"111":418164,"112":143599,"113":274565,"114":274565,"115":0,"116":1767958,"117":1767958,"118":1767958,"119":1,"120":1767957,"121":16,"122":1767941,"123":418165,"124":1349776,"125":3119720,"126":0,"127":3119720,"128":3119720,"129":3119720,"130":1767958,"131":1351762,"132":1093313,"133":1,"134":1093312,"135":1190553,"136":1090440,"137":2872,"138":258449,"139":258449,"140":1,"141":258448,"142":1412184,"143":15336,"144":243112,"145":0,"146":1},"f":{"0":36,"1":38,"2":80,"3":79,"4":42,"5":1767941,"6":1349776,"7":274565,"8":418165,"9":1767958,"10":3119720},"b":{"0":[3,33],"1":[1,2],"2":[1,37],"3":[38,38,38],"4":[0,37],"5":[0,79],"6":[1,78],"7":[0,78],"8":[78,49],"9":[1,41],"10":[42,42],"11":[1,40],"12":[1,39],"13":[1,38],"14":[3,33],"15":[0,3],"16":[0,3],"17":[0,3],"18":[0,3],"19":[2,1767939],"20":[0,1767939],"21":[10,1349764],"22":[0,1349764],"23":[5,1349759],"24":[129216,1155872,64671,0],"25":[2,274563],"26":[208894,65669],"27":[49,208845],"28":[1723,207122],"29":[207121,1],"30":[0,65669],"31":[1,65668],"32":[65669,65669],"33":[0,418165],"34":[1,418164],"35":[143599,274565],"36":[274565,0],"37":[274565,274565],"38":[1,1767957],"39":[16,1767941],"40":[418165,1349776],"41":[0,3119720],"42":[1767958,1351762],"43":[1093313,258449],"44":[1,1093312],"45":[1090440,100113],"46":[258449,0],"47":[1,258448],"48":[15336,1396848]},"inputSourceMap":{"version":3,"file":"/Users/danielyoo/project_team034/src/controller/QueryUtil.ts","sources":["/Users/danielyoo/project_team034/src/controller/QueryUtil.ts"],"names":[],"mappings":"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","sourcesContent":["import { InsightError } from \"./IInsightFacade\";\nimport { Query, Section, Where } from \"./InsightFacade\";\n\nconst mfields: string[] = [\"avg\", \"pass\", \"fail\", \"audit\", \"year\"];\nconst sfields: string[] = [\"dept\", \"id\", \"instructor\", \"title\", \"uuid\"];\n\nexport function parseOptions(options: any): Record<string, any> {\n\tconst columns = options.COLUMNS as string[];\n\tlet order = \"\";\n\n\tif (\"ORDER\" in options) {\n\t\torder = options.ORDER as string;\n\t\tif (!columns.includes(order)) {\n\t\t\tthrow new InsightError(\"ORDER must be in columns!\");\n\t\t}\n\t\torder = order.split(\"_\")[1];\n\t}\n\n\treturn {\n\t\torder: order,\n\t\tcolumns: columns,\n\t\tdatasetID: columns[0].split(\"_\")[0],\n\t};\n}\n\n/**\n * Checks if columns is valid\n *\n * @param columns refers to columns field in given query\n * @throws Error if columns is not valid\n */\nfunction validateColumns(columns: string[]): void {\n\tif (!Array.isArray(columns) || columns.some((col) => typeof col !== \"string\") || columns.length === 0) {\n\t\tthrow new InsightError(\"COLUMNS must be an array of strings and not empty.\");\n\t}\n\n\t// make sure datasetID exists\n\tconst datasetID: string = columns[0].split(\"_\")[0];\n\tif (datasetID === \"\") {\n\t\tthrow new InsightError(\"Dataset ID must exist in query\");\n\t}\n\n\t// check if COLUMNS only contains valid keys\n\tcolumns.forEach((col) => {\n\t\tconst colParts = col.split(\"_\");\n\t\tconst two = 2;\n\n\t\t// make sure order has exactly one underscore\n\t\tif (colParts.length !== two) {\n\t\t\tthrow new InsightError(\"Dataset ID can only have one underscore\");\n\t\t}\n\n\t\tconst curDatasetID: string = colParts[0];\n\n\t\tif (datasetID !== curDatasetID) {\n\t\t\tthrow new InsightError(\"Query can only reference one dataset\");\n\t\t}\n\n\t\tconst key: string = colParts[1];\n\t\tif (!mfields.includes(key) && !sfields.includes(key)) {\n\t\t\tthrow new InsightError(\"COLUMNS must only contain valid mfield or sfield keys\");\n\t\t}\n\t});\n}\n\n/**\n * Checks if query is valid\n *\n * @param query refers to given query\n * @throws Error if query is not valid\n */\nexport function validateQuery(query: any): asserts query is Query {\n\t// check if query exists:\n\tif (query === null || typeof query !== \"object\") {\n\t\tthrow new InsightError(\"Query has to be an object!\");\n\t}\n\n\tconst input = query as Query;\n\n\t// check if WHERE exists\n\tif (!Object.hasOwn(input, \"WHERE\")) {\n\t\tthrow new InsightError(\"query is missing required field 'WHERE'.\");\n\t}\n\n\t// check if OPTIONS exist\n\tif (!Object.hasOwn(input, \"OPTIONS\")) {\n\t\tthrow new InsightError(\"query is missing required field 'OPTIONS'.\");\n\t}\n\n\t// check if COLUMNS exist under OPTIONS\n\tif (!Object.hasOwn(input.OPTIONS, \"COLUMNS\")) {\n\t\tthrow new InsightError(\"OPTIONS is missing required field 'COLUMNS'.\");\n\t}\n\n\t// Check if COLUMNS is an array of strings that is NOT empty\n\tconst columns = input.OPTIONS.COLUMNS;\n\tvalidateColumns(columns);\n\n\tconst datasetID: string = columns[0].split(\"_\")[0];\n\n\t// Check if ORDER exists, and if it does, check if it is a string\n\tif (\"ORDER\" in input.OPTIONS) {\n\t\t// check if order is a string\n\t\tif (typeof input.OPTIONS.ORDER !== \"string\") {\n\t\t\tthrow new InsightError(\"ORDER must be a string.\");\n\t\t}\n\n\t\tconst orderParts = input.OPTIONS.ORDER.split(\"_\");\n\t\tconst two = 2;\n\n\t\t// make sure order has exactly one underscore\n\t\tif (orderParts.length !== two) {\n\t\t\tthrow new InsightError(\"Dataset ID can only have one underscore\");\n\t\t}\n\t\tconst order: string = orderParts[1];\n\n\t\t// check if order references a different dataset\n\t\tif (datasetID !== orderParts[0]) {\n\t\t\tthrow new InsightError(\"ORDER referenced a different dataset!\");\n\t\t}\n\t\tif (!mfields.includes(order)) {\n\t\t\t// check if order is an mfield\n\t\t\tthrow new InsightError(\"ORDER must be a valid mfield key.\");\n\t\t}\n\t}\n}\n\n// gets key for the Comparisons\n// throws error if key is invalid\nfunction getKey(baseKey: string, datasetID: string): string {\n\tconst keyParts = baseKey.split(\"_\");\n\tconst two = 2;\n\n\t// make sure order has exactly one underscore\n\tif (keyParts.length !== two) {\n\t\tthrow new InsightError(\"invalid key in comparison, contains more than one underscore\");\n\t}\n\n\t// check if order references a different dataset\n\tif (datasetID !== keyParts[0]) {\n\t\tthrow new InsightError(\"SComparison referenced a different dataset!\");\n\t}\n\n\treturn keyParts[1];\n}\n\nfunction MComparison(where: Where, section: Section, datasetID: string): boolean {\n\tconst filterKey = Object.keys(where)[0];\n\tconst filter = where[filterKey];\n\n\tconst key = getKey(Object.keys(filter)[0], datasetID);\n\tif (!mfields.includes(key)) {\n\t\tthrow new InsightError(\"SComparison contains an invalid sfield\");\n\t}\n\n\tconst sectionValue = section[key as keyof Section];\n\tconst filterValue = filter[Object.keys(filter)[0]];\n\n\tif (typeof sectionValue !== \"number\") {\n\t\tthrow new InsightError(`${filterKey} must be a number!`);\n\t}\n\n\tif (typeof filterValue !== \"number\") {\n\t\tthrow new InsightError(`${filterKey} must be a number!`);\n\t}\n\n\tswitch (filterKey) {\n\t\tcase \"LT\":\n\t\t\treturn sectionValue < filterValue;\n\n\t\tcase \"GT\":\n\t\t\treturn sectionValue > filterValue;\n\n\t\tcase \"EQ\":\n\t\t\treturn sectionValue === filterValue;\n\n\t\tdefault:\n\t\t\tthrow new InsightError(\"Where contains an invalid base comparison\");\n\t}\n}\n\nfunction wildCardComparison(filterValue: string, sectionValue: string): boolean {\n\tconst wildcards = filterValue.split(\"*\");\n\tconst two = 2;\n\n\tconst beginning = wildcards[0];\n\tconst end = wildcards.at(-1);\n\n\tif (wildcards.length - 1 > two) {\n\t\tthrow new InsightError(\"Can only have \");\n\t}\n\n\tif (wildcards.length - 1 === 1) {\n\t\tif (filterValue.length === 1) {\n\t\t\t// any string works\n\t\t\treturn true;\n\t\t}\n\n\t\tif (beginning === \"\") {\n\t\t\t// any string before value works\n\t\t\tconst regex = new RegExp(`${wildcards[1]}$`);\n\t\t\treturn regex.test(sectionValue);\n\t\t}\n\n\t\tif (end === \"\") {\n\t\t\t// any string after value works\n\t\t\tconst regex = new RegExp(`^${wildcards[0]}`);\n\n\t\t\treturn regex.test(sectionValue);\n\t\t}\n\n\t\tthrow new InsightError(\"The filter can only have an asterix at the start or end of the string\");\n\t}\n\n\t// 2 asterixes\n\tconst three = 3;\n\tif (filterValue.length < three) {\n\t\tthrow new InsightError(\"The filter can't just be a single asterix!\");\n\t}\n\tif (beginning !== \"\" || end !== \"\") {\n\t\tthrow new InsightError(\"The filter can only have an asterix at the start or end of the string\");\n\t}\n\n\t// any string containing value works\n\tconst regex = new RegExp(`.*${wildcards[1]}`);\n\n\treturn regex.test(sectionValue);\n}\n\nfunction SComparison(where: Where, section: Section, datasetID: string): boolean {\n\tconst filterKey = Object.keys(where)[0];\n\tconst filter = where[filterKey];\n\n\tif (filterKey !== \"IS\") {\n\t\tthrow new InsightError(\"SComparison can only be 'IS'\");\n\t}\n\n\tconst key = getKey(Object.keys(filter)[0], datasetID);\n\tif (!sfields.includes(key)) {\n\t\tthrow new InsightError(\"SComparison contains an invalid sfield\");\n\t}\n\n\tconst filterValue = filter[Object.keys(filter)[0]];\n\tconst sectionValue = section[key as keyof Section];\n\n\tif (!filterValue.includes(\"*\")) {\n\t\treturn filterValue === sectionValue;\n\t}\n\n\tif (typeof sectionValue === \"string\" && typeof filterValue === \"string\") {\n\t\treturn wildCardComparison(filterValue, sectionValue);\n\t}\n\tthrow new InsightError(\"section value has to be a string!\");\n}\n\n/*\n\t- Helper function for matchQuery\n\t- Run this when where contains an object and not an array\n*/\nfunction matchSingleObject(where: Where, section: Section, datasetID: string): boolean {\n\tconst filterKey = Object.keys(where)[0];\n\tconst filter = where[filterKey];\n\n\tif (Object.keys(filter).length !== 1) {\n\t\tthrow new InsightError(\"Where can only have one outer filter\");\n\t}\n\n\t// If Negation, call matchQuery\n\tif (filterKey === \"NOT\") {\n\t\treturn !matchQuery(filter, section, datasetID);\n\t}\n\n\t// check if filter is SComparison\n\tif (filterKey === \"IS\") {\n\t\treturn SComparison(where, section, datasetID);\n\t}\n\n\t// must be mcomparison, if not, will throw an error\n\treturn MComparison(where, section, datasetID);\n}\n\nexport function matchQuery(where: Where, section: Section, datasetID: string): boolean {\n\t// validate where only has one outer object\n\tif (Object.keys(where).length !== 1) {\n\t\tthrow new InsightError(\"Where can only have one outer filter\");\n\t}\n\n\tconst filterKey = Object.keys(where)[0];\n\tconst filter = where[filterKey];\n\n\t// Base Case: Check if where is a M or S Comparison\n\t// If M or S Comparison, compare and return boolean\n\t// if negation, call matchQuery on filter\n\tif (!Array.isArray(filter)) {\n\t\treturn matchSingleObject(where, section, datasetID);\n\t}\n\n\t// Check if 'where' is an And\n\tif (filterKey === \"AND\") {\n\t\tif (filter.length === 0) {\n\t\t\tthrow new InsightError(\"And has to have a filter!\");\n\t\t}\n\t\tfor (const subFilter of filter) {\n\t\t\tif (!matchQuery(subFilter, section, datasetID)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\t// Check if where is an Or\n\tif (filterKey === \"OR\") {\n\t\tif (filter.length === 0) {\n\t\t\tthrow new InsightError(\"OR has to have a filter!\");\n\t\t}\n\t\tfor (const subFilter of filter) {\n\t\t\tif (matchQuery(subFilter, section, datasetID)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t// Doesn't belong to any valid filter, return insightError\n\tthrow new InsightError(\"where does not contain any valid filters\");\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ff3979948bc4f387ab2970f2cd8b0cf910abf07a","contentHash":"13d88de25e19f84697f3ea2947d56f2082a29a16bfaef1a59b69e2dceae62f07"},"/Users/danielyoo/project_team034/src/controller/MetaUtil.ts":{"path":"/Users/danielyoo/project_team034/src/controller/MetaUtil.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"2":{"start":{"line":3,"column":26},"end":{"line":3,"column":33}},"3":{"start":{"line":4,"column":15},"end":{"line":4,"column":52}},"4":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"5":{"start":{"line":6,"column":6},"end":{"line":6,"column":68}},"6":{"start":{"line":6,"column":51},"end":{"line":6,"column":63}},"7":{"start":{"line":8,"column":4},"end":{"line":8,"column":39}},"8":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"9":{"start":{"line":10,"column":26},"end":{"line":10,"column":33}},"10":{"start":{"line":11,"column":4},"end":{"line":11,"column":17}},"11":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"12":{"start":{"line":14,"column":4},"end":{"line":14,"column":72}},"13":{"start":{"line":16,"column":4},"end":{"line":16,"column":21}},"14":{"start":{"line":18,"column":19},"end":{"line":24,"column":1}},"15":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"16":{"start":{"line":19,"column":31},"end":{"line":19,"column":42}},"17":{"start":{"line":20,"column":17},"end":{"line":20,"column":19}},"18":{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},"19":{"start":{"line":21,"column":21},"end":{"line":21,"column":141}},"20":{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},"21":{"start":{"line":21,"column":109},"end":{"line":21,"column":141}},"22":{"start":{"line":22,"column":4},"end":{"line":22,"column":36}},"23":{"start":{"line":23,"column":4},"end":{"line":23,"column":18}},"24":{"start":{"line":25,"column":0},"end":{"line":25,"column":62}},"25":{"start":{"line":26,"column":0},"end":{"line":26,"column":94}},"26":{"start":{"line":27,"column":11},"end":{"line":27,"column":44}},"27":{"start":{"line":28,"column":13},"end":{"line":28,"column":42}},"28":{"start":{"line":29,"column":16},"end":{"line":29,"column":22}},"29":{"start":{"line":30,"column":21},"end":{"line":30,"column":52}},"30":{"start":{"line":32,"column":4},"end":{"line":37,"column":5}},"31":{"start":{"line":33,"column":8},"end":{"line":33,"column":36}},"32":{"start":{"line":36,"column":8},"end":{"line":36,"column":75}},"33":{"start":{"line":40,"column":4},"end":{"line":40,"column":38}},"34":{"start":{"line":41,"column":4},"end":{"line":56,"column":5}},"35":{"start":{"line":42,"column":8},"end":{"line":52,"column":9}},"36":{"start":{"line":43,"column":25},"end":{"line":43,"column":64}},"37":{"start":{"line":44,"column":25},"end":{"line":44,"column":41}},"38":{"start":{"line":45,"column":12},"end":{"line":47,"column":13}},"39":{"start":{"line":46,"column":16},"end":{"line":46,"column":26}},"40":{"start":{"line":48,"column":12},"end":{"line":48,"column":29}},"41":{"start":{"line":51,"column":12},"end":{"line":51,"column":22}},"42":{"start":{"line":55,"column":8},"end":{"line":55,"column":66}},"43":{"start":{"line":58,"column":0},"end":{"line":58,"column":36}},"44":{"start":{"line":60,"column":4},"end":{"line":70,"column":5}},"45":{"start":{"line":61,"column":21},"end":{"line":61,"column":41}},"46":{"start":{"line":62,"column":23},"end":{"line":62,"column":25}},"47":{"start":{"line":63,"column":8},"end":{"line":65,"column":9}},"48":{"start":{"line":64,"column":12},"end":{"line":64,"column":30}},"49":{"start":{"line":66,"column":8},"end":{"line":66,"column":22}},"50":{"start":{"line":69,"column":8},"end":{"line":69,"column":66}},"51":{"start":{"line":72,"column":0},"end":{"line":72,"column":24}},"52":{"start":{"line":74,"column":4},"end":{"line":74,"column":38}},"53":{"start":{"line":75,"column":4},"end":{"line":81,"column":5}},"54":{"start":{"line":76,"column":22},"end":{"line":76,"column":23}},"55":{"start":{"line":77,"column":8},"end":{"line":77,"column":86}},"56":{"start":{"line":80,"column":8},"end":{"line":80,"column":66}},"57":{"start":{"line":84,"column":4},"end":{"line":92,"column":5}},"58":{"start":{"line":85,"column":21},"end":{"line":85,"column":41}},"59":{"start":{"line":86,"column":8},"end":{"line":86,"column":27}},"60":{"start":{"line":87,"column":8},"end":{"line":87,"column":34}},"61":{"start":{"line":88,"column":8},"end":{"line":88,"column":20}},"62":{"start":{"line":91,"column":8},"end":{"line":91,"column":65}},"63":{"start":{"line":94,"column":0},"end":{"line":94,"column":34}},"64":{"start":{"line":96,"column":4},"end":{"line":108,"column":5}},"65":{"start":{"line":97,"column":19},"end":{"line":97,"column":39}},"66":{"start":{"line":98,"column":30},"end":{"line":98,"column":41}},"67":{"start":{"line":99,"column":8},"end":{"line":99,"column":53}},"68":{"start":{"line":99,"column":37},"end":{"line":99,"column":51}},"69":{"start":{"line":100,"column":8},"end":{"line":102,"column":9}},"70":{"start":{"line":101,"column":12},"end":{"line":101,"column":25}},"71":{"start":{"line":103,"column":8},"end":{"line":103,"column":34}},"72":{"start":{"line":104,"column":8},"end":{"line":104,"column":20}},"73":{"start":{"line":107,"column":8},"end":{"line":107,"column":67}},"74":{"start":{"line":110,"column":0},"end":{"line":110,"column":40}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":74},"end":{"line":2,"column":75}},"loc":{"start":{"line":2,"column":96},"end":{"line":9,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":6,"column":38},"end":{"line":6,"column":39}},"loc":{"start":{"line":6,"column":49},"end":{"line":6,"column":65}},"line":6},"2":{"name":"(anonymous_2)","decl":{"start":{"line":9,"column":6},"end":{"line":9,"column":7}},"loc":{"start":{"line":9,"column":28},"end":{"line":12,"column":1}},"line":9},"3":{"name":"(anonymous_3)","decl":{"start":{"line":13,"column":80},"end":{"line":13,"column":81}},"loc":{"start":{"line":13,"column":95},"end":{"line":15,"column":1}},"line":13},"4":{"name":"(anonymous_4)","decl":{"start":{"line":15,"column":5},"end":{"line":15,"column":6}},"loc":{"start":{"line":15,"column":20},"end":{"line":17,"column":1}},"line":15},"5":{"name":"(anonymous_5)","decl":{"start":{"line":18,"column":50},"end":{"line":18,"column":51}},"loc":{"start":{"line":18,"column":65},"end":{"line":24,"column":1}},"line":18},"6":{"name":"ensureDataDirectoryExists","decl":{"start":{"line":31,"column":15},"end":{"line":31,"column":40}},"loc":{"start":{"line":31,"column":43},"end":{"line":38,"column":1}},"line":31},"7":{"name":"readMetadata","decl":{"start":{"line":39,"column":15},"end":{"line":39,"column":27}},"loc":{"start":{"line":39,"column":30},"end":{"line":57,"column":1}},"line":39},"8":{"name":"getIds","decl":{"start":{"line":59,"column":15},"end":{"line":59,"column":21}},"loc":{"start":{"line":59,"column":24},"end":{"line":71,"column":1}},"line":59},"9":{"name":"writeMetadata","decl":{"start":{"line":73,"column":15},"end":{"line":73,"column":28}},"loc":{"start":{"line":73,"column":35},"end":{"line":82,"column":1}},"line":73},"10":{"name":"addMetadata","decl":{"start":{"line":83,"column":15},"end":{"line":83,"column":26}},"loc":{"start":{"line":83,"column":36},"end":{"line":93,"column":1}},"line":83},"11":{"name":"removeMetadata","decl":{"start":{"line":95,"column":15},"end":{"line":95,"column":29}},"loc":{"start":{"line":95,"column":34},"end":{"line":109,"column":1}},"line":95},"12":{"name":"(anonymous_12)","decl":{"start":{"line":99,"column":27},"end":{"line":99,"column":28}},"loc":{"start":{"line":99,"column":37},"end":{"line":99,"column":51}},"line":99}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":12,"column":3}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":57},"end":{"line":12,"column":2}}],"line":2},"1":{"loc":{"start":{"line":2,"column":57},"end":{"line":12,"column":2}},"type":"cond-expr","locations":[{"start":{"line":2,"column":74},"end":{"line":9,"column":1}},{"start":{"line":9,"column":6},"end":{"line":12,"column":1}}],"line":2},"2":{"loc":{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},"type":"if","locations":[{"start":{"line":3,"column":4},"end":{"line":3,"column":33}},{"start":{"line":3,"column":4},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},"type":"if","locations":[{"start":{"line":5,"column":4},"end":{"line":7,"column":5}},{"start":{"line":5,"column":4},"end":{"line":7,"column":5}}],"line":5},"4":{"loc":{"start":{"line":5,"column":8},"end":{"line":5,"column":85}},"type":"binary-expr","locations":[{"start":{"line":5,"column":8},"end":{"line":5,"column":13}},{"start":{"line":5,"column":18},"end":{"line":5,"column":84}}],"line":5},"5":{"loc":{"start":{"line":5,"column":18},"end":{"line":5,"column":84}},"type":"cond-expr","locations":[{"start":{"line":5,"column":34},"end":{"line":5,"column":47}},{"start":{"line":5,"column":50},"end":{"line":5,"column":84}}],"line":5},"6":{"loc":{"start":{"line":5,"column":50},"end":{"line":5,"column":84}},"type":"binary-expr","locations":[{"start":{"line":5,"column":50},"end":{"line":5,"column":63}},{"start":{"line":5,"column":67},"end":{"line":5,"column":84}}],"line":5},"7":{"loc":{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},"type":"if","locations":[{"start":{"line":10,"column":4},"end":{"line":10,"column":33}},{"start":{"line":10,"column":4},"end":{"line":10,"column":33}}],"line":10},"8":{"loc":{"start":{"line":13,"column":25},"end":{"line":17,"column":2}},"type":"binary-expr","locations":[{"start":{"line":13,"column":26},"end":{"line":13,"column":30}},{"start":{"line":13,"column":34},"end":{"line":13,"column":57}},{"start":{"line":13,"column":63},"end":{"line":17,"column":1}}],"line":13},"9":{"loc":{"start":{"line":13,"column":63},"end":{"line":17,"column":1}},"type":"cond-expr","locations":[{"start":{"line":13,"column":80},"end":{"line":15,"column":1}},{"start":{"line":15,"column":5},"end":{"line":17,"column":1}}],"line":13},"10":{"loc":{"start":{"line":18,"column":19},"end":{"line":24,"column":1}},"type":"binary-expr","locations":[{"start":{"line":18,"column":20},"end":{"line":18,"column":24}},{"start":{"line":18,"column":28},"end":{"line":18,"column":45}},{"start":{"line":18,"column":50},"end":{"line":24,"column":1}}],"line":18},"11":{"loc":{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},"type":"if","locations":[{"start":{"line":19,"column":4},"end":{"line":19,"column":42}},{"start":{"line":19,"column":4},"end":{"line":19,"column":42}}],"line":19},"12":{"loc":{"start":{"line":19,"column":8},"end":{"line":19,"column":29}},"type":"binary-expr","locations":[{"start":{"line":19,"column":8},"end":{"line":19,"column":11}},{"start":{"line":19,"column":15},"end":{"line":19,"column":29}}],"line":19},"13":{"loc":{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},"type":"if","locations":[{"start":{"line":21,"column":4},"end":{"line":21,"column":141}},{"start":{"line":21,"column":4},"end":{"line":21,"column":141}}],"line":21},"14":{"loc":{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},"type":"if","locations":[{"start":{"line":21,"column":40},"end":{"line":21,"column":141}},{"start":{"line":21,"column":40},"end":{"line":21,"column":141}}],"line":21},"15":{"loc":{"start":{"line":21,"column":44},"end":{"line":21,"column":107}},"type":"binary-expr","locations":[{"start":{"line":21,"column":44},"end":{"line":21,"column":59}},{"start":{"line":21,"column":63},"end":{"line":21,"column":107}}],"line":21},"16":{"loc":{"start":{"line":42,"column":8},"end":{"line":52,"column":9}},"type":"if","locations":[{"start":{"line":42,"column":8},"end":{"line":52,"column":9}},{"start":{"line":42,"column":8},"end":{"line":52,"column":9}}],"line":42},"17":{"loc":{"start":{"line":45,"column":12},"end":{"line":47,"column":13}},"type":"if","locations":[{"start":{"line":45,"column":12},"end":{"line":47,"column":13}},{"start":{"line":45,"column":12},"end":{"line":47,"column":13}}],"line":45},"18":{"loc":{"start":{"line":100,"column":8},"end":{"line":102,"column":9}},"type":"if","locations":[{"start":{"line":100,"column":8},"end":{"line":102,"column":9}},{"start":{"line":100,"column":8},"end":{"line":102,"column":9}}],"line":100}},"s":{"0":1,"1":164,"2":164,"3":164,"4":164,"5":164,"6":504,"7":164,"8":0,"9":0,"10":0,"11":1,"12":2,"13":0,"14":1,"15":2,"16":0,"17":2,"18":2,"19":2,"20":164,"21":164,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":199,"31":199,"32":0,"33":153,"34":153,"35":153,"36":105,"37":105,"38":105,"39":0,"40":105,"41":48,"42":0,"43":1,"44":64,"45":64,"46":64,"47":64,"48":54,"49":64,"50":0,"51":1,"52":46,"53":46,"54":46,"55":46,"56":0,"57":33,"58":33,"59":33,"60":33,"61":33,"62":0,"63":1,"64":13,"65":13,"66":13,"67":13,"68":25,"69":13,"70":0,"71":13,"72":13,"73":0,"74":1},"f":{"0":164,"1":504,"2":0,"3":2,"4":0,"5":2,"6":199,"7":153,"8":64,"9":46,"10":33,"11":13,"12":25},"b":{"0":[1,1,1],"1":[1,0],"2":[164,0],"3":[164,0],"4":[164,164],"5":[0,164],"6":[164,0],"7":[0,0],"8":[1,1,1],"9":[1,0],"10":[1,1,1],"11":[0,2],"12":[2,2],"13":[2,0],"14":[164,0],"15":[164,164],"16":[105,48],"17":[0,105],"18":[0,13]},"inputSourceMap":{"version":3,"file":"/Users/danielyoo/project_team034/src/controller/MetaUtil.ts","sources":["/Users/danielyoo/project_team034/src/controller/MetaUtil.ts"],"names":[],"mappings":"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","sourcesContent":["import { InsightDataset } from \"./IInsightFacade\";\nimport * as fs from \"fs-extra\";\nimport * as path from \"path\";\n\nconst dataDir = \"data\";\nconst metaFilePath = path.join(dataDir, \"meta.json\");\n\nasync function ensureDataDirectoryExists(): Promise<void> {\n\ttry {\n\t\tawait fs.ensureDir(dataDir);\n\t} catch (err) {\n\t\tthrow new Error(`Failed to create data directory: ${(err as Error).message}`);\n\t}\n}\n\nexport async function readMetadata(): Promise<InsightDataset[]> {\n\tawait ensureDataDirectoryExists();\n\n\ttry {\n\t\tif (await fs.pathExists(metaFilePath)) {\n\t\t\tconst data = await fs.readFile(metaFilePath, \"utf8\");\n\t\t\tconst json = JSON.parse(data);\n\n\t\t\tif (!Array.isArray(json.meta)) {\n\t\t\t\treturn [];\n\t\t\t}\n\t\t\treturn json.meta;\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t} catch (err) {\n\t\tthrow new Error(`Error reading metadata: ${(err as Error).message}`);\n\t}\n}\n\nexport async function getIds(): Promise<string[]> {\n\ttry {\n\t\tconst data = await readMetadata();\n\t\tconst result: string[] = [];\n\t\tfor (const d of data) {\n\t\t\tresult.push(d.id);\n\t\t}\n\t\treturn result;\n\t} catch (err) {\n\t\tthrow new Error(`Error reading metadata: ${(err as Error).message}`);\n\t}\n}\n\nasync function writeMetadata(data: InsightDataset[]): Promise<void> {\n\tawait ensureDataDirectoryExists();\n\n\ttry {\n\t\tconst space = 2;\n\t\tawait fs.writeFile(metaFilePath, JSON.stringify({ meta: data }, null, space));\n\t} catch (err) {\n\t\tthrow new Error(`Error writing metadata: ${(err as Error).message}`);\n\t}\n}\n\nexport async function addMetadata(newData: InsightDataset): Promise<boolean> {\n\ttry {\n\t\tconst data = await readMetadata();\n\t\tdata.push(newData);\n\t\tawait writeMetadata(data);\n\t\treturn true;\n\t} catch (err) {\n\t\tthrow new Error(`Error adding metadata: ${(err as Error).message}`);\n\t}\n}\n\nexport async function removeMetadata(id: string): Promise<boolean> {\n\ttry {\n\t\tlet data = await readMetadata();\n\t\tconst initialLength = data.length;\n\n\t\t// Filter out the item with the matching id\n\t\tdata = data.filter((item) => item.id !== id);\n\n\t\t// Check if an item was actually removed\n\t\tif (data.length === initialLength) {\n\t\t\treturn false; // No item was removed\n\t\t}\n\n\t\tawait writeMetadata(data);\n\t\treturn true; // Item was successfully removed\n\t} catch (err) {\n\t\tthrow new Error(`Error removing metadata: ${(err as Error).message}`);\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"57f2d2f370d373fa3dfd0dd1ab8b882dba19cbb3","contentHash":"1e8191ac90819efc00fbf9898a7a782b7f79fe8ad911a8e9f8524beefb0d9b21"}}